<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>impdx</title>
  
  
  <link href="https://www.impdx.vip/atom.xml" rel="self"/>
  
  <link href="https://www.impdx.vip/"/>
  <updated>2021-12-06T04:15:13.251Z</updated>
  <id>https://www.impdx.vip/</id>
  
  <author>
    <name>impdx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 基本知识点</title>
    <link href="https://www.impdx.vip/posts/77a8/"/>
    <id>https://www.impdx.vip/posts/77a8/</id>
    <published>2021-12-05T15:11:51.000Z</published>
    <updated>2021-12-06T04:15:13.251Z</updated>
    
    <content type="html"><![CDATA[<h1>Linux 基本知识点</h1><p><em><strong>请注意，大部分知识点都可以在archwiki中找到</strong></em></p><hr><p><em><strong>archwiki是linux最好用，最全的wiki之一，请学会使用/阅读</strong></em></p><h2 id="不知如何分类">不知如何分类</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo 提升到root运行权限</span><br><span class="line">ifconfig 查看ip 没有包无法运行 最小化安装可能不带</span><br><span class="line">ip add 查看ip 一般linux都自带</span><br><span class="line">****</span><br><span class="line">查看命令的参数，重要</span><br><span class="line">man</span><br><span class="line">help</span><br><span class="line">****</span><br><span class="line"></span><br><span class="line">ctrl+c  中断</span><br><span class="line">ctrl+z挂起，如进入python ctrl+c 没用作用</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="系统开关机">系统开关机</h2><h3 id="关机">关机</h3><ul><li><code>shutdown -h now </code>立刻关机（常用）</li><li><code>halt </code></li><li><code>poweroff</code></li><li><code>shutdown -h 10</code>  10分钟后自动关机</li></ul><h3 id="重启">重启</h3><blockquote><p>一般我就用着俩</p></blockquote><ul><li><code>reboot</code></li><li><code>shutdown -r -h</code></li></ul><h2 id="改源">改源</h2><blockquote><p>镜像源：tuna（清华），中科大，163，阿里，搜狐，腾讯，华为</p></blockquote><p><em><strong>sync表示源在同步中</strong></em></p><ul><li>debian系</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>centos系</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -e &#x27;s|^mirrorlist=|#mirrorlist=|g&#x27; \</span><br><span class="line">         -e &#x27;s|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.ustc.edu.cn/centos|g&#x27; \</span><br><span class="line">         -i.bak \</span><br><span class="line">         /etc/yum.repos.d/CentOS-Linux-AppStream.repo \</span><br><span class="line">         /etc/yum.repos.d/CentOS-Linux-BaseOS.repo \</span><br><span class="line">         /etc/yum.repos.d/CentOS-Linux-Extras.repo \</span><br><span class="line">         /etc/yum.repos.d/CentOS-Linux-PowerTools.repo \</span><br><span class="line">         /etc/yum.repos.d/CentOS-Linux-Plus.repo</span><br></pre></td></tr></table></figure><ul><li>arch 系</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h2 id="源更新，安装软件">源更新，安装软件</h2><ul><li>debian</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt update //更新源</span><br><span class="line">sudo apt upgrade //升级软件包</span><br><span class="line">apt list --upgradeable //列出可更新的软件包</span><br><span class="line">apt install xxx //安装软件包</span><br><span class="line">sudo apt autoremove xxx//删除软件包</span><br><span class="line">sudo apt show xxx //显示包的版本依赖等</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>arch</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syyu //更新</span><br><span class="line">pacman -S xxx //安装</span><br><span class="line">paru //用法一样，AUR</span><br></pre></td></tr></table></figure><h2 id="文件与目录管理">文件与目录管理</h2><ul><li><p><code>ls</code>  列出目录及文件名</p></li><li><p><code>cd</code> 切换目录</p></li><li><p><code>pwd</code> 显示目前的目录</p></li><li><p><code>mkdir</code> 创建一个新的目录</p></li><li><p><code>rmdir</code>删除一个空的目录</p></li><li><p><code>cp</code> 复制文件或目录</p></li><li><p><code>touch</code> 创建一个文件</p></li><li><p><code>rm</code> 删除文件或目录 千万别<code>sudo rm -rf /*</code></p></li><li><p><code>mv</code> 移动文件与目录</p></li><li><p><code>cat</code> 查看文件</p></li><li><p><code>unzip</code>  解压zip文件等具体看man/help -v查看解压，后面直接跟压缩包直接解压</p></li></ul><h2 id="VIM-nano">VIM &amp;&amp; nano</h2><ul><li><p>Vim 是一个功能非常强大，且具有很强扩展性的编辑器。你只要知道他很<code>牛</code>就对了</p></li><li><p>中文文档https://yianwillis.github.io/vimcdoc/doc/help.html</p></li><li><p>退出 <code>:q</code></p></li><li><p>保存 <code>：w</code></p></li><li><p>保存退出<code>：wq</code></p></li><li><p>强制执行<code>：！</code></p></li><li><p>强制保存退出<code>：wq!</code></p></li><li><p>插入文本</p><ul><li><code>i</code>当前位置插入</li><li><code>o</code>下一行位置插入</li><li><code>O</code>上一行位置插入</li><li><code>I</code> 光标所在行的最前面插入</li><li><code>a</code>光标后插入</li><li><code>A</code>行尾插入</li></ul></li><li><p><code>u</code>撤销</p></li><li><p><code>ctrl+r</code> 撤销上一次撤销的行动</p></li><li><p>复制粘贴 y和p,有y10j这种用法，很棒</p></li></ul><blockquote><p>有兴趣可以看看https://www.runoob.com/linux/linux-vim.html</p></blockquote><hr><ul><li>nano更偏向于初学者</li><li>^代表ctrl</li><li>M代表alt</li><li>看help和下面那些基本操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+G，显示帮助文本</span><br><span class="line"></span><br><span class="line">Ctrl+O，保存当前文件</span><br><span class="line"></span><br><span class="line">Ctrl+R，读取其他文件并插入光标位置</span><br><span class="line"></span><br><span class="line">Ctrl+Y，跳至上一屏幕</span><br><span class="line"></span><br><span class="line">Ctrl+K，剪切当前一行</span><br><span class="line"></span><br><span class="line">Ctrl+C，显示光标位置</span><br><span class="line"></span><br><span class="line">Ctrl+X，退出编辑文本</span><br><span class="line"></span><br><span class="line">Ctrl+J，对其当前段落（以空格为分隔符）</span><br><span class="line"></span><br><span class="line">Ctrl+W，搜索文本位置</span><br><span class="line"></span><br><span class="line">Ctrl+V，跳至下一屏幕</span><br><span class="line"></span><br><span class="line">Ctrl+U，粘贴文本至光标处</span><br><span class="line"></span><br><span class="line">Ctrl+T，运行拼写检查</span><br><span class="line"></span><br><span class="line">Ctrl+_，跳转到某一行</span><br><span class="line"></span><br><span class="line">ALT+U，撤销</span><br><span class="line"></span><br><span class="line">ALT+E，重做</span><br><span class="line"></span><br><span class="line">ALT+Y, 语法高亮</span><br><span class="line"></span><br><span class="line">ALT+#，显示行号</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>常用检测网络是否通顺</h1><ul><li><p><code>ping</code> 默认ICMP</p></li><li><p><code>TCPping</code> 走tcp ping</p></li><li><p><code>curl</code> 获取web服务器文件，直接在终端显示，比如curl <code>www.baidu.com</code></p></li></ul><h1>linux 权限</h1><p>（稍微带一下）<br>有兴趣可以去Google</p><ul><li><code>chmod +x xxx </code>给予运行权限</li><li><code>chmod 777 xxx </code>一般不这么写，给予任何人的所有权限，读写执行</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2014/06/file-llls22.jpg" alt="如何看权限"><br><img src="https://www.runoob.com/wp-content/uploads/2014/08/file-permissions-rwx.jpg" alt="权限解读1"></p><p><img src="https://www.runoob.com/wp-content/uploads/2014/08/rwx-standard-unix-permission-bits.png" alt="chmod_ugo"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u user 文件所有者</span><br><span class="line">g group 文件所有者所在组</span><br><span class="line">o others 所有其他用户</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">左对齐</th><th style="text-align:center">右对齐</th><th style="text-align:center">居中对齐</th><th style="text-align:center">居中对齐</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">读 + 写 + 执行</td><td style="text-align:center">rwx</td><td style="text-align:center">111</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">读 + 写</td><td style="text-align:center">rw-</td><td style="text-align:center">110</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">读 + 执行</td><td style="text-align:center">r-x</td><td style="text-align:center">101</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">只读</td><td style="text-align:center">r–</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">写 + 执行</td><td style="text-align:center">-wx</td><td style="text-align:center">011</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">只写</td><td style="text-align:center">-w-</td><td style="text-align:center">010</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">只执行</td><td style="text-align:center">–x</td><td style="text-align:center">001</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">无</td><td style="text-align:center">—</td><td style="text-align:center">000</td></tr></tbody></table><ul><li><code>umask</code> 可以了解一下</li></ul><h2 id="Git基本使用">Git基本使用</h2><ul><li><code>git init</code> git 初始化</li><li><code>git clone</code> //克隆项目到本地</li><li><code>git add .</code> //添加所有项目到目前分支</li><li><code>git commit -m &quot;更新说明&quot;</code> //把内容说明添加到本地仓库</li><li><code>git push</code> //将本地仓库提交上去</li><li><code>git pull</code> //将远程仓库同步到本地仓库</li><li><code>git diff </code> //比较暂存区和本地文件区别</li><li><code>git config </code> // git配置，具体看参数</li><li><code>git log</code> // 查看历史提交记录</li><li><code>git status </code> // 查看当前状态</li><li><code>git branch xxx</code> // 创建分支</li><li>…具体请参考github/git文档 （可以适当了解SVN，gitlab，版本控制，分支等）</li></ul><h1>linux 跑python</h1><ul><li><p><code>python</code> 默认使用python2</p></li><li><p><code>python3</code>默认使用python3</p></li><li><p><code>pip3</code> //建议使用镜像源，tuna有源，可用-i参数，也可以修改全局</p></li></ul><h1>（非必须）如使用linux为主系统可看</h1><h2 id="debian（kali）-安装中文输入法">debian（kali） 安装中文输入法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt fcitx5</span><br><span class="line">sudo apt install fcitx-googlepinyin</span><br><span class="line">apt update -y &amp;&amp; apt install xfonts-intl-chinese ttf-wqy-microhei ttf-wqy-zenhei</span><br><span class="line">sudo dpkg-reconfigure locales</span><br><span class="line"># 进入图形界面，选中en_US.UTF-8 UTF-8和zh_CN.UTF-8 UTF-8（空格是选择，tab是切换，*是选中）</span><br><span class="line">//选择语言，建议首选en_us.utf8,就是英文，其次中文，因为英文对某些软件支持较好。</span><br><span class="line">apt clean &amp;&amp; apt update -y</span><br><span class="line"></span><br><span class="line">ctrl+space切换输入法 //可以通过设置更改</span><br></pre></td></tr></table></figure><h2 id="gcc">gcc</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gcc -o 1.c 1</span><br><span class="line"></span><br><span class="line">./1</span><br><span class="line">//g++ 类似，可参考参数开启O2优化</span><br></pre></td></tr></table></figure><h2 id="gdb（暂时无）">gdb（暂时无）</h2><h2 id="Linux-更换-编译内核">Linux 更换/编译内核</h2><p>编译内核请参考另一篇文章：<a href="https://www.impdx.vip/posts/1017/">https://www.impdx.vip/posts/1017/</a> 都是基于debian，差别不是很大</p><h2 id="安装QQ等国内软件可参考archwiki">安装QQ等国内软件可参考archwiki</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://wiki.archlinux.org/title/Tencent_QQ_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</span><br><span class="line">如果没找到合适的就去github搜索，很多基于webqq开发的包。</span><br></pre></td></tr></table></figure><h2 id="linux桌面">linux桌面</h2><ul><li><p>gnome</p></li><li><p>kde</p></li><li><p>xfce</p></li><li><p>lxqt</p></li><li><p>…等</p></li><li><p>机器配置高首选kde，花里胡哨美化效果好</p></li><li><p>其次gnome上手即可用，</p></li><li><p>机器配置差建议xfce，lxqt等</p></li></ul><hr><p>后期看情况更新本文</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Linux 基本知识点&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;请注意，大部分知识点都可以在archwiki中找到&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;archwiki是linux最好用，最全的wiki之一，请学会使用/阅读&lt;/st</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="linux" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/linux/"/>
    
    
    <category term="linux" scheme="https://www.impdx.vip/tags/linux/"/>
    
    <category term="arch linux" scheme="https://www.impdx.vip/tags/arch-linux/"/>
    
  </entry>
  
  <entry>
    <title>arch-坚果云/白屏/闪退</title>
    <link href="https://www.impdx.vip/posts/2074/"/>
    <id>https://www.impdx.vip/posts/2074/</id>
    <published>2021-11-15T06:15:51.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>环境描述</h1><ul><li><p>刚装好arch因为keepass选择了webdav，所以需要坚果云同步。</p></li><li><p>报错为 <code>Nutstore meets some problems. You may try to restart it to fix. If it still</code></p></li><li><p>之后同步直接闪退，由于log加密所以发邮件给官方，官方回复，配置中文编码和字体</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-----------</span><br><span class="line">OS: Arch Linux x86_64</span><br><span class="line">Kernel: 5.14.16-arch1-1</span><br><span class="line">Uptime: 1 hour, 44 mins</span><br><span class="line">Packages: 951 (pacman)</span><br><span class="line">Shell: zsh 5.8</span><br><span class="line">Resolution: 1920x1080</span><br><span class="line">DE: Plasma 5.23.3</span><br><span class="line">WM: KWin</span><br><span class="line">WM Theme: Breeze 微风</span><br><span class="line">Theme: Breeze Light [Plasma], Breeze [GTK2/3]</span><br><span class="line">Icons: [Plasma], breeze-dark [GTK2/3]</span><br><span class="line">Terminal: konsole</span><br><span class="line">CPU: AMD Ryzen 9 3950X (32) @ 3.500GHz</span><br><span class="line">GPU: NVIDIA GeForce GTX 1060 6GB</span><br><span class="line">Memory: 6057MiB / 64220MiB</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>解决方案</h1><h3 id="配置中文编码，安装中文环境">配置中文编码，安装中文环境</h3><ul><li>编辑locale.gen文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen   </span><br></pre></td></tr></table></figure><ul><li>1.将以下行去掉注释</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zh_CN.GB18030 GB18030</span><br><span class="line">zh_CN.GBK GBK</span><br><span class="line">zh_CN.UTF-<span class="number">8</span> UTF-<span class="number">8</span></span><br><span class="line">zh_CN.GB2312</span><br><span class="line">zh_TW BIG5</span><br></pre></td></tr></table></figure><ul><li><p>2.重新编译<code>locale-gen </code></p></li><li><p>3.安装中文字体<code>pacman -S wqy-zenhei  </code>(参考archwiki <a href="https://wiki.archlinux.org/title/Fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Fonts_(简体中文)</a>)</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;环境描述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;刚装好arch因为keepass选择了webdav，所以需要坚果云同步。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;报错为 &lt;code&gt;Nutstore meets some problems. You may try to res</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="linux" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/linux/"/>
    
    
    <category term="linux" scheme="https://www.impdx.vip/tags/linux/"/>
    
    <category term="arch linux" scheme="https://www.impdx.vip/tags/arch-linux/"/>
    
  </entry>
  
  <entry>
    <title>MD5 加密原理&amp;&amp;实际应用</title>
    <link href="https://www.impdx.vip/posts/e3f9/"/>
    <id>https://www.impdx.vip/posts/e3f9/</id>
    <published>2021-10-13T11:25:43.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>MD5 加密原理&amp;&amp;实际应用</h1><h2 id="原理">原理</h2><ul><li>MD5特点<ul><li>唯一性，是有损加密，不可逆向，现有破解都是用<strong>撞库</strong>实现</li><li>不管多长的字符串,加密后<strong>长度都是一样长</strong></li><li>唯一性：一个文件,不管多大,小到几k,大到几G,你<strong>只要改变</strong>里面<strong>某个</strong>字符,那么都会<strong>导致MD5值改变.</strong><br><strong>作用:<strong>很多软件和应用在网站提供下载资源,其中</strong>包含了对文件的MD5码</strong>,用户下载后只需要用<strong>工具测一下下载好的文件</strong>,通过对比就知道<strong>该文件是否有过更改变动</strong>.</li><li>不可逆性</li></ul></li><li>MD5消息摘要算法，属Hash算法一类。MD5算法对输入任意长度的<strong>消息</strong>进行运行，产生一个128位的消息摘要。</li><li>MD5的用处不是用来加密信息解密信息的，个人观点：用来做一个全局唯一标记，比如impdx或者图片文件产生的md5永远只会是一个值，我们不用去对比文件或者文本是否相同，只需要判断md5是否相同就可以判断了。</li></ul><p><strong>算法原理</strong></p><p><strong>1、数据填充</strong></p><p>对消息进行数据填充，使消息的长度对512取模得448，设消息长度为X，即满足X mod 512=448。根据此公式得出需要填充的数据长度。</p><p>填充方法：在消息后面进行填充，填充第一位为1，其余为0。</p><p><strong>2、添加消息长度</strong></p><p>在第一步结果之后再填充上原消息的长度，可用来进行的存储长度为64位。如果消息长度大于264，则只使用其低64位的值，即（消息长度 对 264取模）。</p><p>在此步骤进行完毕后，最终消息长度就是512的整数倍。</p><p><strong>3、数据处理</strong></p><p>准备需要用到的数据：</p><ul><li>4个常数： A = 0x67452301, B = 0x0EFCDAB89, C = 0x98BADCFE, D = 0x10325476;</li><li>4个函数：F(X,Y,Z)=(X &amp; Y) | ((~X) &amp; Z); G(X,Y,Z)=(X &amp; Z) | (Y &amp; (~Z)); H(X,Y,Z)=X ^ Y ^ Z; I(X,Y,Z)=Y ^ (X | (~Z));</li></ul><p>把消息分以512位为一分组进行处理，每一个分组进行4轮变换，以上面所说4个常数为起始变量进行计算，</p><p>重新输出4个变量，以这4个变量再进行下一分组的运算，如果已经是最后一个分组，则这4个变量为最后的结果，即MD5值。</p><figure class="highlight plaintext"><figcaption><span>^ | ~</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">运算（6 &amp; 2）</span><br><span class="line"></span><br><span class="line">6的二进制：0110</span><br><span class="line"></span><br><span class="line">2的二进制：0010</span><br><span class="line">6      000···000 0110（一共32位）</span><br><span class="line"></span><br><span class="line">&amp;（相同位置都为1，才能去1，否则为0）</span><br><span class="line">2      000···000 0010（一共32位）</span><br><span class="line">结果 000···000 0010</span><br><span class="line"></span><br><span class="line">结果首位（32位的第一位）为0，是正数二进制，不需要转换，这结果为2。</span><br><span class="line">与：1 &amp; 1 = 1, 1 &amp; 0 = 0, 0 &amp; 1 = 0, 0 &amp; 0 = 0;// 不同时为0，都是1时得1，都是2时得2</span><br><span class="line">或：1 | 1 = 1, 1 | 0 = 1, 0 | 1 = 1, 0 | 0 = 0;//有1得1，都是0得0；</span><br><span class="line">非：~0 = 1, ~1 = 0;//取反</span><br><span class="line">异或运算（^）：0^0=0； 0^1=1；1^0=1；1^1=0; //不同时为1</span><br></pre></td></tr></table></figure><p>具体计算的实现较为复杂，建议查阅相关书籍。<br><img src="https://image.impdx.vip/imagesMD5%E5%8E%9F%E7%90%86.png" alt="1"></p><p><img src="https://image.impdx.vip/imagesMD5%E5%8E%9F%E7%90%86%E5%BE%AA%E7%8E%AF%E5%8A%A0%E5%AF%86.png" alt="2"></p><ul><li>我们可以这么理解<br>X：字符串长度<br>要求<br>X mod 512=448<br>如果不行则加长度，进行填充，填充第一位为1，其余为0。<br>接着  长度如果超过2的64次方 位，只取低64位，即对 2的64取模</li></ul><p>接着分组进行循环运算，最后换位就变成了加密MD5</p><h2 id="MD5的用处">MD5的用处</h2><ul><li><p>用来检验文件是否被修改，通常和sha1或者sha256配合检查，比如txt文件中修改了一个字母，那么他的md5会完全不相同。</p></li><li><p>对于某些明文密码传输，需要保护，普通加密方式具有可逆性，但是MD5不可逆。但常常不会单独使用MD5进行，因为通常的密码都可以通过撞库来获取（撞库：通过用空间换时间的方式，由于MD5的唯一性，我可以用计算机跑出任何字符串的MD5，比如12345的MD5，可以跑出来，也可以通过别人分享来获取）</p></li></ul><h2 id="实战利用PHP弱类型来比较MD5">实战利用PHP弱类型来比较MD5</h2><ul><li><p>例子只演示MD5在PHP中的漏洞</p></li><li><p>什么是弱类型,众所周知PHP是一门弱语言，不必向 PHP 声明该变量的数据类型，PHP 会根据变量的值，自动把变量的值转换为正确的数据类型，但在这个转换过程中就有可能引发一些安全问题。</p></li><li><p>当一个字符串被当作一个数值来取值，其结果和类型如下:如果该字符串没有包含’.',‘e’,'E’并且其数值值在整形的范围之内，该字符串被当作int来取值。其他所有情况下都被作为float来取值，该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。</p></li></ul><p><strong>题目来自于bugku</strong></p><p><a href="https://ctf.bugku.com/challenges/detail/id/94.html">https://ctf.bugku.com/challenges/detail/id/94.html</a></p><p>一进去我们可以看到题目是用MD5，同时用?a=a显示false。</p><ul><li>知识点<ul><li>PHP在处理哈希字符串时，会利用&quot;!=“或”==&quot;来对哈希值进行比较，它把每一个以&quot;0E&quot;开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以&quot;0E&quot;开头的，那么PHP将会认为他们相同，都是0。</li><li>比如s1885207154a这串字符串通过MD5加密后为0e509367213418206700842008763514</li></ul></li></ul><p>攻击者可以利用这一漏洞，通过输入一个经过哈希后以&quot;0E&quot;开头的字符串，即会被PHP解释为0，如果数据库中存在这种哈希值以&quot;0E&quot;开头的密码的话，他就可以以这个用户的身份登录进去，尽管并没有真正的密码。</p><p>输入 a=s1885207154a</p><p>成功绕过</p><p><strong>最后附上c++版本的MD5实现</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MD5.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*4组计算函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> X, <span class="keyword">unsigned</span> <span class="keyword">int</span> Y, <span class="keyword">unsigned</span> <span class="keyword">int</span> Z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (X &amp; Y) | ((~X) &amp; Z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">G</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> X, <span class="keyword">unsigned</span> <span class="keyword">int</span> Y, <span class="keyword">unsigned</span> <span class="keyword">int</span> Z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (X &amp; Z) | (Y &amp; (~Z));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">H</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> X, <span class="keyword">unsigned</span> <span class="keyword">int</span> Y, <span class="keyword">unsigned</span> <span class="keyword">int</span> Z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> X ^ Y ^ Z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">I</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> X, <span class="keyword">unsigned</span> <span class="keyword">int</span> Y, <span class="keyword">unsigned</span> <span class="keyword">int</span> Z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Y ^ (X | (~Z));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*4组计算函数结束*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*32位数循环左移实现函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ROL</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> &amp;s, <span class="keyword">unsigned</span> <span class="keyword">short</span> cx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cx &gt; <span class="number">32</span>)cx %= <span class="number">32</span>;</span><br><span class="line">    s = (s &lt;&lt; cx) | (s &gt;&gt; (<span class="number">32</span> - cx));</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*B\L互转，接收UINT类型*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ltob</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> &amp;i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> tmp = i;<span class="comment">//保存副本</span></span><br><span class="line">    byte *psour = (byte*)&amp;tmp, *pdes = (byte*)&amp;i;</span><br><span class="line">    pdes += <span class="number">3</span>;<span class="comment">//调整指针，准备左右调转</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">short</span> i = <span class="number">3</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">CopyMemory</span>(pdes - i, psour + i, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">MD5循环计算函数，label=第几轮循环（1&lt;=label&lt;=4），lGroup数组=4个种子副本，M=数据（16组32位数指针）</span></span><br><span class="line"><span class="comment">种子数组排列方式: --A--D--C--B--，即 lGroup[0]=A; lGroup[1]=D; lGroup[2]=C; lGroup[3]=B;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AccLoop</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> label, <span class="keyword">unsigned</span> <span class="keyword">int</span> *lGroup, <span class="keyword">void</span> *M)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> *i1, *i2, *i3, *i4, TAcc, tmpi = <span class="number">0</span>; <span class="comment">//定义:4个指针； T表累加器； 局部变量</span></span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="title">int</span><span class="params">(*clac)</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> X, <span class="keyword">unsigned</span> <span class="keyword">int</span> Y, <span class="keyword">unsigned</span> <span class="keyword">int</span> Z)</span></span>; <span class="comment">//定义函数类型</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> rolarray[<span class="number">4</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">        &#123; <span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span> &#125;,</span><br><span class="line">        &#123; <span class="number">5</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span> &#125;,</span><br><span class="line">        &#123; <span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span> &#125;,</span><br><span class="line">        &#123; <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span> &#125;</span><br><span class="line">    &#125;;<span class="comment">//循环左移-位数表</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> mN[<span class="number">4</span>][<span class="number">16</span>] = &#123;</span><br><span class="line">        &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span> &#125;,</span><br><span class="line">        &#123; <span class="number">1</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">14</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">12</span> &#125;,</span><br><span class="line">        &#123; <span class="number">5</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">2</span> &#125;,</span><br><span class="line">        &#123; <span class="number">0</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">13</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">2</span>, <span class="number">9</span> &#125;</span><br><span class="line">    &#125;;<span class="comment">//数据坐标表</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> *pM = <span class="keyword">static_cast</span>&lt;<span class="keyword">unsigned</span> <span class="keyword">int</span>*&gt;(M);<span class="comment">//转换类型为32位的Uint</span></span><br><span class="line">    TAcc = ((label - <span class="number">1</span>) * <span class="number">16</span>) + <span class="number">1</span>; <span class="comment">//根据第几轮循环初始化T表累加器</span></span><br><span class="line">    clac clacArr[<span class="number">4</span>] = &#123; F, G, H, I &#125;; <span class="comment">//定义并初始化计算函数指针数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*一轮循环开始（16组-&gt;16次）*/</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">short</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*进行指针自变换*/</span></span><br><span class="line">        i1 = lGroup + ((<span class="number">0</span> + i) % <span class="number">4</span>);</span><br><span class="line">        i2 = lGroup + ((<span class="number">3</span> + i) % <span class="number">4</span>);</span><br><span class="line">        i3 = lGroup + ((<span class="number">2</span> + i) % <span class="number">4</span>);</span><br><span class="line">        i4 = lGroup + ((<span class="number">1</span> + i) % <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*第一步计算开始: A+F(B,C,D)+M[i]+T[i+1] 注:第一步中直接计算T表*/</span></span><br><span class="line">        tmpi = (*i1 + clacArr[label - <span class="number">1</span>](*i2, *i3, *i4) + pM[(mN[label - <span class="number">1</span>][i])] + (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(<span class="number">0x100000000</span>UL * <span class="built_in">abs</span>(<span class="built_in">sin</span>((<span class="keyword">double</span>)(TAcc + i)))));</span><br><span class="line">        <span class="built_in">ROL</span>(tmpi, rolarray[label - <span class="number">1</span>][i % <span class="number">4</span>]);<span class="comment">//第二步:循环左移</span></span><br><span class="line">        *i1 = *i2 + tmpi;<span class="comment">//第三步:相加并赋值到种子</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*接口函数，并执行数据填充*/</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span>* <span class="title">MD5</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* mStr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> mLen = <span class="built_in">strlen</span>(mStr); <span class="comment">//计算字符串长度</span></span><br><span class="line">    <span class="keyword">if</span> (mLen &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> FillSize = <span class="number">448</span> - ((mLen * <span class="number">8</span>) % <span class="number">512</span>); <span class="comment">//计算需填充的bit数</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> FSbyte = FillSize / <span class="number">8</span>; <span class="comment">//以字节表示的填充数</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> BuffLen = mLen + <span class="number">8</span> + FSbyte; <span class="comment">//缓冲区长度或者说填充后的长度</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *md5Buff = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>[BuffLen]; <span class="comment">//分配缓冲区</span></span><br><span class="line">    <span class="built_in">CopyMemory</span>(md5Buff, mStr, mLen); <span class="comment">//复制字符串到缓冲区</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*数据填充开始*/</span></span><br><span class="line">    md5Buff[mLen] = <span class="number">0x80</span>; <span class="comment">//第一个bit填充1</span></span><br><span class="line">    <span class="built_in">ZeroMemory</span>(&amp;md5Buff[mLen + <span class="number">1</span>], FSbyte - <span class="number">1</span>); <span class="comment">//其它bit填充0，另一可用函数为FillMemory</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> lenBit = mLen * <span class="number">8ULL</span>; <span class="comment">//计算字符串长度，准备填充</span></span><br><span class="line">    <span class="built_in">CopyMemory</span>(&amp;md5Buff[mLen + FSbyte], &amp;lenBit, <span class="number">8</span>); <span class="comment">//填充长度</span></span><br><span class="line">    <span class="comment">/*数据填充结束*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*运算开始*/</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> LoopNumber = BuffLen / <span class="number">64</span>; <span class="comment">//以16个字为一分组，计算分组数量</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> A = <span class="number">0x67452301</span>, B = <span class="number">0x0EFCDAB89</span>, C = <span class="number">0x98BADCFE</span>, D = <span class="number">0x10325476</span>;<span class="comment">//初始4个种子，小端类型</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> *lGroup = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>[<span class="number">4</span>]&#123; A, D, C, B&#125;; <span class="comment">//种子副本数组,并作为返回值返回</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> Bcount = <span class="number">0</span>; Bcount &lt; LoopNumber; ++Bcount) <span class="comment">//分组大循环开始</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*进入4次计算的小循环*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">short</span> Lcount = <span class="number">0</span>; Lcount &lt; <span class="number">4</span>;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">AccLoop</span>(++Lcount, lGroup, &amp;md5Buff[Bcount * <span class="number">64</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*数据相加作为下一轮的种子或者最终输出*/</span></span><br><span class="line">        A = (lGroup[<span class="number">0</span>] += A);</span><br><span class="line">        B = (lGroup[<span class="number">3</span>] += B);</span><br><span class="line">        C = (lGroup[<span class="number">2</span>] += C);</span><br><span class="line">        D = (lGroup[<span class="number">1</span>] += D);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*转换内存中的布局后才能正常显示*/</span></span><br><span class="line">    <span class="built_in">ltob</span>(lGroup[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">ltob</span>(lGroup[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">ltob</span>(lGroup[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">ltob</span>(lGroup[<span class="number">3</span>]);</span><br><span class="line">    <span class="keyword">delete</span>[] md5Buff; <span class="comment">//清除内存并返回</span></span><br><span class="line">    <span class="keyword">return</span> lGroup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;MD5 加密原理&amp;amp;&amp;amp;实际应用&lt;/h1&gt;
&lt;h2 id=&quot;原理&quot;&gt;原理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MD5特点
&lt;ul&gt;
&lt;li&gt;唯一性，是有损加密，不可逆向，现有破解都是用&lt;strong&gt;撞库&lt;/strong&gt;实现&lt;/li&gt;
&lt;li&gt;不管多长的字符串,加密</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="密码学" scheme="https://www.impdx.vip/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>rot密码</title>
    <link href="https://www.impdx.vip/posts/e3a1/"/>
    <id>https://www.impdx.vip/posts/e3a1/</id>
    <published>2021-10-13T11:25:43.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>rot密码</h1><h3 id="rot密码其实可以看作是凯撒密码的一种变式">rot密码其实可以看作是凯撒密码的一种变式</h3><ul><li>本质都是位移密码</li></ul><h2 id="特征">特征</h2><ul><li>rot5：只有数字进行了加密</li><li>rot13：只有数字和字母进行了加密</li><li>rot18：在rot13的基础上，步长改变</li><li>rot47：对所有字符进行加密<ul><li>rot47比较好识别，因为他的字符串加密往往是有着特殊符号比如</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E9:D :D 7=28L2H`abcN</span><br><span class="line">%wx$ x$ u&#123;pvL2H`abcN</span><br></pre></td></tr></table></figure><p>上面中的%$等符号</p><h3 id="rot具体区别">rot具体区别</h3><ul><li>rot5：只将字符串中的数字进行加密，步数为5，同时在0-9十个数字进行循环，如1在rot5加密后为6，而6在rot5加密后为1</li></ul><hr><ul><li>rot13：只将字符串中的字母进行加密，步数为13，加密方式上最接近凯撒密码，分别在A-Z或a-z之间循环，如A在rot13加密后为N,Z在rot13加密后为M</li></ul><hr><ul><li>rot18:字面意思(5+13=18) 即将上述两种加密方式结合，分别对数字和字母进行相应的操作</li></ul><hr><ul><li>rot47:由于无论是rot5、rot13或rot18都只能对数字和字母进行相应的加密，而对“！@#￥%&amp;”之类的符号却缺少加密，因此在此基础上引入ASCII码（对应图表见下）<ul><li>ASCII值进行位置替换，如当前为小写字母z-&gt;K，0-&gt;_。</li></ul></li></ul><h3 id="注意：用于ROT47编码的字符其ASCII值范围是33－126（原因是由于0-32以及127与字符表示无关！！）"><em><strong>注意：用于ROT47编码的字符其ASCII值范围是33－126（原因是由于0-32以及127与字符表示无关！！）</strong></em></h3><p><img src="https://image.impdx.vip/imagesASCII.webp" alt="2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;rot密码&lt;/h1&gt;
&lt;h3 id=&quot;rot密码其实可以看作是凯撒密码的一种变式&quot;&gt;rot密码其实可以看作是凯撒密码的一种变式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;本质都是位移密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;特征&quot;&gt;特征&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;rot5：只有数字</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="密码" scheme="https://www.impdx.vip/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>centos7搭建DVWA靶场</title>
    <link href="https://www.impdx.vip/posts/4699/"/>
    <id>https://www.impdx.vip/posts/4699/</id>
    <published>2021-10-07T14:05:14.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>centos7 搭建 DVWA 靶场</h1><ul><li><p>github:<a href="https://github.com/digininja/DVWA">https://github.com/digininja/DVWA</a></p></li><li><p>centos7:<a href="https://mirror.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/">https://mirror.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/</a> (这里采用tuna[清华源])</p></li></ul><h1>配置centos基本环境</h1><h2 id="配置sudo">配置sudo</h2><ul><li>刚装好的centos默认用户不在sudo列表中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su //提升到root权限</span><br><span class="line">vim /etc/sudoers //编辑sudoers，vim不习惯，可以用其他编辑</span><br><span class="line">/root ALL=(ALL) ALL //不是vim跳过，`/`表示搜索  在这行的下面</span><br><span class="line">impdx ALL=(ALL) ALL //`impdx`是当前的用户名</span><br><span class="line">wq! //不是vim跳过，强制保存</span><br><span class="line">exit //退出root用户</span><br></pre></td></tr></table></figure><h2 id="配置源">配置源</h2><ul><li>此处采用清华源 [可用中科大/网易/阿里/搜狐等]</li><li>具体参考：<a href="https://mirror.tuna.tsinghua.edu.cn/help/centos/">https://mirror.tuna.tsinghua.edu.cn/help/centos/</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -e &#x27;s|^mirrorlist=|#mirrorlist=|g&#x27; \</span><br><span class="line">         -e &#x27;s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.tuna.tsinghua.edu.cn|g&#x27; \</span><br><span class="line">         -i.bak \</span><br><span class="line">         /etc/yum.repos.d/CentOS-*.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache</span><br></pre></td></tr></table></figure><h1>配置DVWA</h1><ul><li>安装相关依赖</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mariadb* </span><br><span class="line">sudo yum install php php-mysqli php-gd</span><br><span class="line">sudo yum install httpd</span><br><span class="line">sudo yum install git unzip</span><br></pre></td></tr></table></figure><ul><li>设置自启动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br><span class="line">systemctl enable mariadb</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure><h1>移动DVWA到www</h1><ul><li>下载可以用git clone /GUI界面直接浏览器下载/VMtools也可以</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将下载好的DVWA-master.zip解压  </span><br><span class="line">unzip DVWA-master.zip //解压  </span><br><span class="line">mv DVWA-master.zip DVWA //修改一下名字  </span><br><span class="line">mv DVWA /var/www/html //把文件夹移到apache下  </span><br><span class="line">chown apache:apache -R /var/www/html //拇指</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在html文件夹中</span><br><span class="line">cd DVWA/ 进入文件夹  </span><br><span class="line">其中README.md是官方的帮助文档，里面有很官方的搭建过程  </span><br><span class="line">cd config/ 进入config/下修改一下配置文件  </span><br><span class="line">使用cp命令保存原来文件，并复制一个文件改名为config.inc.php  </span><br><span class="line">cp config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure><h2 id="设置数据库">设置数据库</h2><h3 id="初始化数据库">初始化数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> mysql -u root -p //进入数据库，初始化是回车进入，如果进入不了就先启动一下mariadb服务</span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database dvwa;</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all on dvwa.* todvwa@localhost identified by &#x27;123456&#x27;;  </span><br><span class="line">MariaDB [(none)]&gt; flush privileges;  </span><br><span class="line">MariaDB [(none)]&gt; exit  </span><br></pre></td></tr></table></figure><p>此时重启一下mysql服务：systemctl restart mariadb</p><h3 id="修改一下DVWA的配置文件">修改一下DVWA的配置文件</h3><ul><li>可以自己去申请key，具体百度</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#vim config.inc.php  </span><br><span class="line">$_DVWA[&#x27;db_server&#x27; ]?? = &#x27;localhost&#x27;;</span><br><span class="line"></span><br><span class="line">$_DVWA[&#x27;db_database&#x27; ] = &#x27;dvwa&#x27;;</span><br><span class="line"></span><br><span class="line">$_DVWA[ &#x27;db_user&#x27;]???? = &#x27;dvwa&#x27;;</span><br><span class="line"></span><br><span class="line">$_DVWA[&#x27;db_password&#x27; ] = &#x27;123456&#x27;;  //这里是在数据库里面设置的密码</span><br><span class="line"></span><br><span class="line">然后设置key：  </span><br><span class="line">$_DVWA[ &#x27;recaptcha_public_key&#x27; ]? =&#x27;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg&#x27;;</span><br><span class="line"></span><br><span class="line">$_DVWA[ &#x27;recaptcha_private_key&#x27; ] =&#x27;6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ&#x27;;</span><br><span class="line"></span><br><span class="line">修改一下php.ini这个文件  </span><br><span class="line">vim /etc/php.ini  </span><br><span class="line">直接搜索 allow_url_include = Off //搜索到这个之后把Off 改为On</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">- 重启一下服务</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>systemctl restart mariadb //重启数据库<br>systemctl restart httpd //重启apache<br>systemctl stop firewalld //关闭防火墙<br>setenforce 0 //关闭selinux</p><pre><code>最后去浏览器测试一下网址http://ip/DVWA/login.phpip是centos的ip用户名是admin,密码是password创建一下就可以了</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;centos7 搭建 DVWA 靶场&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;github:&lt;a href=&quot;https://github.com/digininja/DVWA&quot;&gt;https://github.com/digininja/DVWA&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
</summary>
      
    
    
    
    
    <category term="CTF,基础" scheme="https://www.impdx.vip/tags/CTF-%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 836. 并查集(数组)</title>
    <link href="https://www.impdx.vip/posts/811b/"/>
    <id>https://www.impdx.vip/posts/811b/</id>
    <published>2021-09-09T06:52:22.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<ul><li>题目： <a href="https://www.acwing.com/problem/content/description/838/">https://www.acwing.com/problem/content/description/838/</a></li></ul><h2 id="先说一下本题思路">先说一下本题思路</h2><ul><li><p>1.看清题目，主要有俩个操作，合并和查询 。 总体思路是找到俩个祖宗节点，并且把俩个祖宗节点相连(其实就是改p[a的祖宗]=b的祖宗 比如p[3]=4，p[3]=p[4]=4,他们的祖宗都是4，)</p></li><li><p>2.合并是在一个数组中，利用下标和他所指向的值，如果他所指向的值一样，那么就是一个集合。用下表来记录具体数据。</p></li><li><p>3.查询直接查询祖宗节点，很好理解，就是比如说查询x，他就会查询p[x]的值，如果和x不一样，会查询find[p[x]]的值,这里有点绕，x如果和p[x]的值不一样，就查询find(p[x]),一个个找，找到祖宗节点，就是x和p[x]一样的节点，原始节点。</p></li><li><p>主要操作就是针对于祖宗节点进行的。</p></li><li><p>题目难点（个人愚见）：find函数，寻找祖宗节点的过程，下标和值的用法。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 100010;</span><br><span class="line"></span><br><span class="line">int p[N];</span><br><span class="line">int find(int x)   //找祖宗节点的函数</span><br><span class="line">&#123;</span><br><span class="line">  if(p[x] != x) p[x] = find(p[x]);</span><br><span class="line">  return p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool only(int a,int b)  //判断是否在一个集合</span><br><span class="line">&#123;</span><br><span class="line">  return find(a)==find(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int a,b;</span><br><span class="line">  char str,test;</span><br><span class="line">  int n,m;</span><br><span class="line"></span><br><span class="line">  scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">  scanf(&quot;%c&quot;,&amp;test);  //消除回车</span><br><span class="line"></span><br><span class="line">  for(int i = 1;i&lt;=n; i++)</span><br><span class="line">    p[i]=i;</span><br><span class="line"></span><br><span class="line">  while(m--)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">    scanf(&quot;%c %d %d&quot;,&amp;str,&amp;a,&amp;b);</span><br><span class="line">    scanf(&quot;%c&quot;,&amp;test);  //消除回车</span><br><span class="line">    // printf(&quot;%c%d%d\n&quot;,str,a,b);</span><br><span class="line">    if(str == &#x27;M&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">      p[find(a)]=find(b); //合并操作，</span><br><span class="line">    &#125;</span><br><span class="line">    else if(str == &#x27;Q&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">      if(only(a,b)) printf(&quot;Yes\n&quot;);</span><br><span class="line">      else printf(&quot;No\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;题目： &lt;a href=&quot;https://www.acwing.com/problem/content/description/838/&quot;&gt;https://www.acwing.com/problem/content/description/838/&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 787. 归并排序 &amp;&amp; 注释 &amp;&amp; 思路</title>
    <link href="https://www.impdx.vip/posts/1026/"/>
    <id>https://www.impdx.vip/posts/1026/</id>
    <published>2021-07-22T13:08:08.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="原题链接">原题链接</h2><p><a href="https://www.acwing.com/problem/content/description/789/">https://www.acwing.com/problem/content/description/789/</a></p><p><em><strong>2021/4/19 21:10</strong></em></p><h1>思路</h1><ul><li>先分开，分成俩个组</li><li>用双指针遍历，小的放入tmp数组</li><li>如果有剩余，把剩余放入tmp数组</li><li>把tmp的数据替换到q数组中</li></ul><h1>后续会更新</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1000010;</span><br><span class="line"></span><br><span class="line">int n;</span><br><span class="line">int q[N],tmp[N];</span><br><span class="line"></span><br><span class="line">void merge_sort(int *q,int l ,int r)</span><br><span class="line">&#123;</span><br><span class="line">  if(l &gt;= r) return ;</span><br><span class="line"></span><br><span class="line">  int mid = l + r &gt;&gt; 1;</span><br><span class="line"></span><br><span class="line">  merge_sort(q, l, mid),merge_sort(q, mid+1, r);      // 分左边右边，俩组数据</span><br><span class="line"></span><br><span class="line">  int k = 0,i = l,j = mid + 1;        // k表示，tmp当前放入的第几个数</span><br><span class="line"></span><br><span class="line">  while(i &lt;= mid&amp;&amp;j &lt;= r)   // 俩组数据比较大小，双指针算法，小的放入tmp</span><br><span class="line">    if(q[i] &lt;= q[j]) tmp[k ++ ]=q[ i ++];</span><br><span class="line">    else tmp[k ++] = q[j ++];</span><br><span class="line"></span><br><span class="line">  while(i &lt;= mid) tmp[k ++] = q[i ++];      //把剩余的数据放进tmp，从tmp[k]开始放</span><br><span class="line">  while(j &lt;= r) tmp[k ++] = q[j ++];</span><br><span class="line"></span><br><span class="line">  for(int i=l,j=0;i&lt;=r;i++,j++) q[i]=tmp[j];  //把q的数据换成tmp的数据</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">  for(int i=0;i&lt;n;i++)</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">  merge_sort(q,0,n-1);</span><br><span class="line"></span><br><span class="line">  for(int i=0;i&lt;n;i++)</span><br><span class="line">    printf(&quot;%d &quot;,q[i]);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;原题链接&quot;&gt;原题链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/789/&quot;&gt;https://www.acwing.com/problem/content/des</summary>
      
    
    
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 798. 前缀和&amp;&amp;前缀矩阵&amp;&amp;差分&amp;&amp;差分矩阵 代码&amp;注释&amp;&amp;原理</title>
    <link href="https://www.impdx.vip/posts/4639/"/>
    <id>https://www.impdx.vip/posts/4639/</id>
    <published>2021-07-22T13:04:14.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="原题链接">原题链接</h2><p><a href="https://www.acwing.com/problem/content/description/800/">https://www.acwing.com/problem/content/description/800/</a></p><h1>前缀和 &amp;&amp; 差分</h1><h2 id="一维前缀和-差分">一维前缀和&amp;&amp;差分</h2><h3 id="前缀和">前缀和</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum[i]=a[1]+a[2]+a[3].....a[i];</span><br></pre></td></tr></table></figure><p><img src="https://pic2.latewind.cn/2021/04/27/00749047afae1.png" alt="D_U`EECRERK5K~XX_SOHEVG.png"></p><p>可以根据以上结果推出公式<code>a[n] = a[n-1] + a[n]</code></p><h3 id="差分">差分</h3><p>差分就是前缀和的逆运算。关系如下</p><p>如果 前缀和可以表示为f(x)=d 查分就是d=f(x)</p><p>具体看以下推理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a数组： a1, a2, a3, …, an</span><br><span class="line"></span><br><span class="line">b数组：b1, b2, b3, …, bn</span><br><span class="line"></span><br><span class="line">**a数组是b数组的前缀和**</span><br><span class="line"></span><br><span class="line">a1 = b1;</span><br><span class="line">a2 = b1 + b2;</span><br><span class="line">a3 = b1 + b2 + b3;</span><br><span class="line"></span><br><span class="line">**a数组是b数组的前缀和**</span><br><span class="line"></span><br><span class="line">那么我们来看b=啥</span><br><span class="line"></span><br><span class="line">a[0]= 0;</span><br><span class="line"></span><br><span class="line">b[1] = a[1] - a[0];</span><br><span class="line"></span><br><span class="line">b[2] = a[2] - a[1];</span><br><span class="line"></span><br><span class="line">b[3] =a [3] - a[2];</span><br><span class="line"></span><br><span class="line">........</span><br><span class="line"></span><br><span class="line">b[n] = a[n] - a[n-1];</span><br><span class="line"></span><br><span class="line">… .....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b(n) = a(n) - a(n-1) ----&gt; an = b1 + b2 + b3 + … + bn</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>前缀和的差分=原序列</li><li>差分的前缀和=原序列</li><li><img src="https://pic2.latewind.cn/2021/04/27/05e6c8eff63b7.png" alt="~92_ZLFC4176R_@IPX_BC28.png"></li><li>所谓差分就是进行逆运算，让原数组成为新数组的前缀和，从而创造新数组。</li><li>所谓前缀和就是在这个数之前的数 和 这个数相加的总和，被称为前缀和。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">核心部分</span><br><span class="line">    b[l] += c;</span><br><span class="line">    b[r + 1] -= c;</span><br></pre></td></tr></table></figure><h2 id="二维矩阵-前缀和-差分">二维矩阵 前缀和 &amp;&amp; 差分</h2><h3 id="矩阵前缀和">矩阵前缀和</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">核心部分</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://pic2.latewind.cn/2021/04/27/500ed9a60a9fd.png" alt="_KW_DN_5MODI__BI2@_29A6.png"></p><ul><li>如图所示</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">核心部分</span><br><span class="line">s[i][j] = s[i-1][j]+s[i][j-1]-s[i-1][j-1]+a[i][j];</span><br><span class="line"></span><br><span class="line">计算的是x1，y1到x2，y2的每个数的和</span><br><span class="line"></span><br><span class="line">s[x2,y2] - s[x1-1,y2] - s[x2,y1-1] + s[x1-1, y1-1]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="矩阵差分">矩阵差分</h3><p><img src="https://pic2.latewind.cn/2021/04/27/e6d1be1445ec1.png" alt="EZVQKMP@__N_J6BPXIZNQ_C.png"></p><ul><li><p>b[x1][ y1 ] +=c ; 对应图1 ,让整个a数组中蓝色矩形面积的元素都加上了c。</p></li><li><p>b[x1,][y2+1]-=c ; 对应图2 ,让整个a数组中绿色矩形面积的元素再减去c，使其内元素不发生改变。</p></li><li><p>b[x2+1][y1]- =c ; 对应图3 ,让整个a数组中紫色矩形面积的元素再减去c，使其内元素不发生改变。</p></li><li><p>b[x2+1][y2+1]+=c; 对应图4,让整个a数组中红色矩形面积的元素再加上c，红色内的相当于被减了两次，再加上一次c，才能使其恢复。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">自个儿推</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">核心部分</span><br><span class="line">b[i][j]+=a[i][j];</span><br><span class="line">b[i+1][j]-=a[i][j];</span><br><span class="line">b[i][j+1]-=a[i][j];</span><br><span class="line">b[i+1][j+1]+=a[i][j];</span><br></pre></td></tr></table></figure><h1>相关题目</h1><ul><li>全部来自于acwing</li></ul><h2 id="前缀和-2">前缀和</h2><p>输入一个长度为 n的整数序列。</p><p>接下来再输入 m<br>个询问，每个询问输入一对 l,r。</p><p>对于每个询问，输出原序列中从第 l<br>个数到第 r个数的和。</p><p>输入格式<br><br/><br/><br/><br>第一行包含两个整数 n 和 m。</p><p>第二行包含 n个整数，表示整数数列。</p><p>接下来 m<br>行，每行包含两个整数 l 和 r，表示一个询问的区间范围</p><br/><p>输出格式</p><p>共 m行，每行输出一个询问的结果。<br>数据范围</p><p>1≤l≤r≤n,</p><p>1≤n,m≤100000,</p><p>−1000≤数列中元素的值≤1000</p><p>输入样例：</p><p>5 3</p><p>2 1 3 6 4</p><p>1 2</p><p>1 3</p><p>2 4</p><p>输出样例：</p><p>3</p><p>6</p><p>10</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int n,m;</span><br><span class="line">  int l,r;</span><br><span class="line">  scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">  for(int i = 1;i &lt;= n;i ++)</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">  for(int i = 1; i &lt;= n;i ++)</span><br><span class="line">    a[i] = a[i-1] + a[i];</span><br><span class="line"></span><br><span class="line">  // //测试</span><br><span class="line">  // for(int i = 1;i &lt;= n;i ++)</span><br><span class="line">  //   printf(&quot;%d &quot;,a[i]);</span><br><span class="line">  // puts(&quot;&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  while(m--)</span><br><span class="line">  &#123;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    printf(&quot;%d\n&quot;,a[r]-a[l-1]);</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="矩阵前缀和-2">矩阵前缀和</h2><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x1,y1,x2,y2，表示一个子矩阵的左上角坐标和右下角坐标。</p><br/>对于每个询问输出子矩阵中所有数的和。输入格式<br/>第一行包含三个整数 n，m，q。<p>接下来 n行，每行包含 m个整数，表示整数矩阵。</p><p>接下来 q行，每行包含四个整数 x1,y1,x2,y2，表示一组询问。<br>输出格式<br><br/></p><p>共 q行，每行输出一个询问的结果。<br>数据范围</p><p>1≤n,m≤1000</p><p>1≤q≤200000,</p><p>1≤x1≤x2≤n,</p><p>1≤y1≤y2≤m,</p><p>−1000≤矩阵内元素的值≤1000</p><p>输入样例：</p><p>3 4 3</p><p>1 7 2 4</p><p>3 6 2 8</p><p>2 1 2 3</p><p>1 1 2 2</p><p>2 1 3 4</p><p>1 3 3 4</p><p>输出样例：</p><p>17</p><p>27</p><p>21</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1010;</span><br><span class="line">int a[N][N],s[N][N];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int n,m,q;</span><br><span class="line">  scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;q);</span><br><span class="line">  for(int i = 1;i &lt;= n ;i++)</span><br><span class="line">    for(int j = 1;j &lt;= m;j ++)</span><br><span class="line">      scanf(&quot;%d&quot;,&amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    for(int j = 1;j &lt;= m;j ++)</span><br><span class="line">      s[i][j] = s[i-1][j]+s[i][j-1]-s[i-1][j-1]+a[i][j];</span><br><span class="line"></span><br><span class="line">  while(q--)</span><br><span class="line">  &#123;</span><br><span class="line">    int x1,x2,y1,y2;</span><br><span class="line">    scanf(&quot;%d%d%d%d&quot;,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">    printf(&quot;%d\n&quot;,s[x2][y2]-s[x1-1][y2]-s[x2][y1-1]+s[x1-1][y1-1]);</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="差分-2">差分</h2><p>输入一个长度为 n的整数序列。</p><p>接下来输入 m个操作，每个操作包含三个整数 l,r,c，表示将序列中 [l,r] 之间的每个数加上 c。</p><p>请你输出进行完所有操作后的序列。<br>输入格式</p><p>第一行包含两个整数 n<br>和 m。</p><p>第二行包含 n个整数，表示整数序列。</p><p>接下来 m行，每行包含三个整数 l，r，c，表示一个操作。<br>输出格式</p><p>共一行，包含 n个整数，表示最终序列。</p><p>数据范围</p><p>1≤n,m≤100000</p><p>1≤l≤r≤n,</p><p>−1000≤c≤1000,</p><p>−1000≤整数序列中元素的值≤1000</p><p>输入样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 2 2 1 2 1</span><br><span class="line">1 3 1</span><br><span class="line">3 5 1</span><br><span class="line">1 6 1</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 5 3 4 2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N];</span><br><span class="line">int b[N];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  int n,m;</span><br><span class="line">  scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">  //构造差分数组b1=a1,b2=a2-a1,b[n]=a[n]-a[n-1];</span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    b[i]=a[i]-a[i-1];</span><br><span class="line"></span><br><span class="line">    //看链接 https://www.acwing.com/solution/content/26588/</span><br><span class="line">  while(m--)</span><br><span class="line">  &#123;</span><br><span class="line">    int l,r,c;</span><br><span class="line">    scanf(&quot;%d%d%d&quot;,&amp;l,&amp;r,&amp;c);</span><br><span class="line">    b[l]+=c;</span><br><span class="line">    b[r+1]-=c;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //把差分数组还原成原数组</span><br><span class="line">  for(int i = 1;i &lt;= n;i ++)</span><br><span class="line">    b[i]+=b[i-1];</span><br><span class="line"></span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    printf(&quot;%d &quot;,b[i]);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="矩阵差分-2">矩阵差分</h2><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个操作，每个操作包含五个整数 x1,y1,x2,y2,c，其中 (x1,y1) 和 (x2,y2)表示一个子矩阵的左上角坐标和右下角坐标。</p><p>每个操作都要将选中的子矩阵中的每个元素的值加上 c。</p><p>请你将进行完所有操作后的矩阵输出。</p><p>输入格式</p><p>第一行包含整数 n,m,q。</p><p>接下来 n行，每行包含 m个整数，表示整数矩阵。</p><p>接下来 q行，每行包含 5 个整数 x1,y1,x2,y2,c，表示一个操作。</p><p>输出格式</p><p>共 n行，每行 m个整数，表示所有操作进行完毕后的最终矩阵。</p><p>数据范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1≤n,m≤1000,</span><br><span class="line">1≤q≤100000,</span><br><span class="line">1≤x1≤x2≤n,</span><br><span class="line">1≤y1≤y2≤m,</span><br><span class="line">−1000≤c≤1000,</span><br><span class="line">−1000≤矩阵内元素的值≤1000</span><br></pre></td></tr></table></figure><p>输入样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3 4 3</span><br><span class="line">1 2 2 1</span><br><span class="line">3 2 2 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 2 2 1</span><br><span class="line">1 3 2 3 2</span><br><span class="line">3 1 3 4 1</span><br></pre></td></tr></table></figure><p>输出样例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 1</span><br><span class="line">4 3 4 1</span><br><span class="line">2 2 2 2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 5010;</span><br><span class="line">int a[N][N],b[N][N];</span><br><span class="line">void insert(int x1,int y1,int x2,int y2,int c)</span><br><span class="line">&#123;</span><br><span class="line">  b[x1][y1] += c;</span><br><span class="line">  b[x1][y2+1] -= c;</span><br><span class="line">  b[x2+1][y1] -= c;</span><br><span class="line">  b[x2+1][y2+1] += c;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  int n,m,q;</span><br><span class="line"></span><br><span class="line">  //输入</span><br><span class="line">  scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;q);</span><br><span class="line"></span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    for(int j = 1;j &lt;= m;j++)</span><br><span class="line">      scanf(&quot;%d&quot;,&amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">  //根据公式计算查分数组</span><br><span class="line">  for(int i = 1;i &lt;= n;i++)</span><br><span class="line">    for(int j = 1;j &lt;= m;j++)</span><br><span class="line">      insert(i,j,i,j,a[i][j]);</span><br><span class="line"></span><br><span class="line">  //对差分数组进行+c操作</span><br><span class="line">  while(q--)</span><br><span class="line">  &#123;</span><br><span class="line">    int x1,y1,x2,y2,c;</span><br><span class="line">    scanf(&quot;%d%d%d%d%d&quot;,&amp;x1,&amp;y1,&amp;x2,&amp;y2,&amp;c);</span><br><span class="line">    insert(x1,y1,x2,y2,c);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //转换成a数组，由差分数组，求前缀和</span><br><span class="line">  for(int i = 1; i &lt;= n;i ++)</span><br><span class="line">    for(int j = 1; j &lt;= m;j ++)</span><br><span class="line">      b[i][j] += b[i-1][j] + b[i][j-1] - b[i-1][j-1];</span><br><span class="line"></span><br><span class="line">  //输出</span><br><span class="line">  for(int i = 1; i &lt;= n;i ++)</span><br><span class="line">  &#123;</span><br><span class="line">    for(int j = 1; j &lt;= m;j ++)</span><br><span class="line">      printf(&quot;%d &quot;,b[i][j]);</span><br><span class="line">  puts(&quot;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;原题链接&quot;&gt;原题链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/800/&quot;&gt;https://www.acwing.com/problem/content/des</summary>
      
    
    
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 788. 逆序对的数量 &amp;&amp; 图解</title>
    <link href="https://www.impdx.vip/posts/70b1/"/>
    <id>https://www.impdx.vip/posts/70b1/</id>
    <published>2021-07-22T13:03:56.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="原题链接">原题链接</h2><p><a href="https://www.acwing.com/problem/content/description/790/">https://www.acwing.com/problem/content/description/790/</a></p><p><a href="https://pic2.latewind.cn/2021/04/21/78754c0e75bf0.png"><img src="https://pic2.latewind.cn/2021/04/21/78754c0e75bf0.png" alt="逆序对.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">typedef long long LL;</span><br><span class="line"></span><br><span class="line">const int N = 100010;</span><br><span class="line"></span><br><span class="line">int n;</span><br><span class="line">int q[N],tmp[N];</span><br><span class="line"></span><br><span class="line">LL merge_sort(int l, int r)</span><br><span class="line">&#123;</span><br><span class="line">  if(l &gt;= r) return 0;</span><br><span class="line"></span><br><span class="line">  int mid = l + r &gt;&gt; 1;</span><br><span class="line">  LL res = merge_sort(l, mid) + merge_sort(mid+1, r);</span><br><span class="line"></span><br><span class="line">  //归并</span><br><span class="line">  int k = 0,i = l,j = mid + 1;</span><br><span class="line">  while(i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">    if(q[i] &lt;= q[j]) tmp[k ++] = q[i ++];</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      tmp[k ++] = q[j ++];</span><br><span class="line">      //res是逆序对的数量，请看画图。</span><br><span class="line">      res += mid - i + 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  // 把剩下的数扔进tmp</span><br><span class="line">  while(i &lt;= mid) tmp[k ++] = q[i ++];</span><br><span class="line">  while(j &lt;= r) tmp[k ++] = q[j ++];</span><br><span class="line"></span><br><span class="line">  //替换原序列</span><br><span class="line">  for(int i=l,j=0;i&lt;=r;i++,j++) q[i]=tmp[j];</span><br><span class="line"></span><br><span class="line">  //返回逆序对的数量</span><br><span class="line">  return res;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  for(int i=0;i&lt;n;i++)</span><br><span class="line">    cin &gt;&gt; q[i];</span><br><span class="line"></span><br><span class="line">  cout &lt;&lt; merge_sort(0, n-1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;原题链接&quot;&gt;原题链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/790/&quot;&gt;https://www.acwing.com/problem/content/des</summary>
      
    
    
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 165. 小猫爬山 c++ 思路&amp;&amp;注释</title>
    <link href="https://www.impdx.vip/posts/a659/"/>
    <id>https://www.impdx.vip/posts/a659/</id>
    <published>2021-07-22T13:01:03.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="原题链接">原题链接</h2><p><a href="https://www.acwing.com/problem/content/description/167/">https://www.acwing.com/problem/content/description/167/</a></p><h1>思路</h1><h2 id="想法">想法</h2><p>1.排序优化 //可略过，不加也可以ac</p><p>2.让猫坐满一辆车</p><p>3.开新的车</p><p>4.重复2-3</p><h2 id="具体代码思路（2-3步骤）">具体代码思路（2-3步骤）</h2><p>1.确定参数  (int u(第几只猫),int k(第几辆车))</p><p>2.跳出条件 (u==n) 当猫走完时，跳出，n为总得猫数量，已经枚举完最后一个猫了。所以跳出，为什么是u==n，因为数组是从0开始的，最后一个猫为n-1。</p><p>3.判断当前这只猫，<strong>简称u猫</strong>(判断u猫能不能放在之前的车中)</p><ul><li><p>for循环,枚举第一辆车到现在所有的车</p></li><li><p>如果可以放得下u猫，则进入新的dfs（u+1,k）</p></li><li><p>(u+1,k),</p></li></ul><blockquote><p>可以放得下猫所以车辆数不变,k就不变，u猫被放进去了，下一只猫就是u+1猫。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(int i=0;i&lt;k;i++)</span><br><span class="line">//从第一辆车开始遍历，遍历到k辆车，如果可以塞下第u只猫则执行；</span><br><span class="line">&#123;</span><br><span class="line">  if(a[u]+car[i]&lt;=w)</span><br><span class="line">  &#123;</span><br><span class="line">    car[i]+=a[u];</span><br><span class="line">    dfs(u+1,k);</span><br><span class="line">    car[i]-=a[u];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果放不下猫，则开一辆新车dfs(u+1,k+1)</li></ul><blockquote><p>dfs(下一只猫，下一辆车)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">car[k]=a[u];</span><br><span class="line">dfs(u+1,k+1);</span><br><span class="line">car[k]=0;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>这里回溯为什么是car[k]=0,因为没放猫时，车的重量是0</li></ul><hr><h1>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int n,w,ans=20;</span><br><span class="line">int a[20],car[20];</span><br><span class="line"></span><br><span class="line">int cmp(int a,int b)    //从大到小 函数sort第三个参数</span><br><span class="line">&#123;</span><br><span class="line">  return a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void dfs(int u,int k)</span><br><span class="line">&#123;</span><br><span class="line">  if(k&gt;=ans) return;        //注意等于ans可以减少时间，不加等于号800多ms，加了20多ms</span><br><span class="line">  if(u==n)          //u个猫等于n个猫，猫坐完车的时候</span><br><span class="line">  &#123;</span><br><span class="line">    ans=k;          </span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">//-----------------------------------start</span><br><span class="line">  for(int i=0;i&lt;k;i++)  //从第一辆车开始遍历，遍历到k辆车，如果可以塞下第u只猫则执行；</span><br><span class="line">  &#123;</span><br><span class="line">    if(a[u]+car[i]&lt;=w)</span><br><span class="line">    &#123;</span><br><span class="line">      car[i]+=a[u];</span><br><span class="line">      dfs(u+1,k);</span><br><span class="line">      car[i]-=a[u];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">//-------------------------------------end</span><br><span class="line">  //开新车</span><br><span class="line">  car[k]=a[u];</span><br><span class="line">  dfs(u+1,k+1);</span><br><span class="line">  car[k]=0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">//---------输入----------</span><br><span class="line">  scanf(&quot;%d%d&quot;,&amp;n,&amp;w);</span><br><span class="line">  for(int i=0;i&lt;n;i++)</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">//---------排序优化----------</span><br><span class="line">  sort(a,a+n,cmp);</span><br><span class="line">//---------------------------------</span><br><span class="line">  dfs(0,0);</span><br><span class="line"></span><br><span class="line">  printf(&quot;%d&quot;,ans);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;原题链接&quot;&gt;原题链接&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/167/&quot;&gt;https://www.acwing.com/problem/content/des</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>AcWing 24. 机器人的运动范围 C++ dfs(附上思路与思考&amp;&amp;注释)</title>
    <link href="https://www.impdx.vip/posts/51e9/"/>
    <id>https://www.impdx.vip/posts/51e9/</id>
    <published>2021-07-22T12:51:35.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><h1>请注意：本文只包含dfs的内容 /如有错误或者意见，欢迎留言</h1><ul><li>总体思路</li></ul><blockquote><p>模拟机器人走路，在符合条件的情况下，上下左右走，走到符合条件的格子，标记/累加。走完即可。</p></blockquote><ul><li>条件的判定</li></ul><blockquote><p>1.越界情况，x，y的值得在符合二维数组范围的情况下进行<br>2.走过的点，不需要累加/标记<br>3.x,y坐标相加是否大于k的时</p></blockquote><ul><li>dfs参数选择</li></ul><blockquote><p>最近看到一条定理：一直在变化的数，就可以用于dfs的参数。<br>这里我选择了，x,y坐标的值作为dfs的参数</p></blockquote><ul><li>小思考（没有尝试过，成功的小伙伴留言一下下）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是否可以直接遍历出x,y相加的值，</span><br><span class="line">记录于二维数组中，</span><br><span class="line">从而直接得出答案(没试过)；</span><br><span class="line">提示：不能直接判断哦，看清楚上下左右；</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">int k,row,col;          //row代表行，col代表列</span><br><span class="line">int n;  //用于答案计数</span><br><span class="line">int a[100][100];  </span><br><span class="line">    int movingCount(int threshold, int rows, int cols)</span><br><span class="line">    &#123;</span><br><span class="line">        memset(a,0,sizeof(a));</span><br><span class="line">        k=threshold,row=rows,col=cols;</span><br><span class="line">        dfs(0,0);</span><br><span class="line">        return n;</span><br><span class="line">    &#125;</span><br><span class="line">    int he(int x,int y) //用于计算x，y的和(题意中的和)</span><br><span class="line">    &#123;</span><br><span class="line">      int res=0;</span><br><span class="line">      while(x)</span><br><span class="line">      &#123;</span><br><span class="line">        res+=x%10;</span><br><span class="line">        x/=10;</span><br><span class="line">      &#125;</span><br><span class="line">      while(y)</span><br><span class="line">      &#123;</span><br><span class="line">        res+=y%10;</span><br><span class="line">        y/=10;</span><br><span class="line">      &#125;</span><br><span class="line">      return res;</span><br><span class="line">    &#125;</span><br><span class="line">    void dfs(int x,int y)</span><br><span class="line">    &#123;</span><br><span class="line">      if(x&lt;0||y&lt;0||x&gt;=row||y&gt;=col) return;  //边界判定</span><br><span class="line">      if(a[x][y]==1) return;  //是否已经走过这个点</span><br><span class="line">      if(he(x,y)&gt;k) return;   //如果x+y大于k的话（不符合条件）</span><br><span class="line">      //剩下的符合条件的情况 的操作</span><br><span class="line">      a[x][y]=1;</span><br><span class="line">      n++;</span><br><span class="line">      dfs(x-1,y); //上</span><br><span class="line">      dfs(x+1,y); //下</span><br><span class="line">      dfs(x,y-1); //左</span><br><span class="line">      dfs(x,y+1); //右</span><br><span class="line"></span><br><span class="line">      return;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1&gt;请注意：本文只包含dfs的内容 /如有错误或者意见，欢迎留言&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;总体思路&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;模拟机器人走路，在符合条件的情况下，上下左右走，走到符合条件的格子，标记/累加。走完即可。&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法,ACM" scheme="https://www.impdx.vip/tags/%E7%AE%97%E6%B3%95-ACM/"/>
    
  </entry>
  
  <entry>
    <title>linux gcc与c for win的不同</title>
    <link href="https://www.impdx.vip/posts/5eaf/"/>
    <id>https://www.impdx.vip/posts/5eaf/</id>
    <published>2020-10-27T15:17:43.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>gcc 要求</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a, b;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a, &amp;b) != EOF)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="int-main">int main:</h3><h3 id="while-scanf">while(scanf()):</h3><h3 id="return-0">return 0:</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;gcc 要求&lt;/h1&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>c语言可爱的运算符</title>
    <link href="https://www.impdx.vip/posts/6399/"/>
    <id>https://www.impdx.vip/posts/6399/</id>
    <published>2020-10-27T15:03:27.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h3 id="仅为个人笔记（随笔，后期可能会整理）">仅为个人笔记（随笔，后期可能会整理）</h3><h2 id="算术运算符；">算术运算符；</h2><ul><li><p>±/* 我就不介绍了</p></li><li><p>%余数运算符，整除后的余数<br>B%A 将得到 3</p></li></ul><h1>i++与++i</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">int</span> i,a;<span class="comment">//定义i，a俩个变量</span></span><br><span class="line"> i=<span class="number">5</span>;</span><br><span class="line"> a=<span class="number">0</span>; <span class="comment">//赋值俩个变量</span></span><br><span class="line"> a=i++; <span class="comment">//进行i++运算</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i); <span class="comment">// 打印输出i，这里的i无论是i++还是++i，都会+1</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a); <span class="comment">//表示整个i++式子的变量</span></span><br><span class="line"></span><br><span class="line"> i=<span class="number">5</span>;</span><br><span class="line"> a=<span class="number">0</span>;</span><br><span class="line"> a=++i;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line"></span><br><span class="line"> i=<span class="number">5</span>;</span><br><span class="line"> a=<span class="number">0</span>;</span><br><span class="line"> a=--i;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line"></span><br><span class="line"> i=<span class="number">5</span>;</span><br><span class="line"> a=<span class="number">0</span>;</span><br><span class="line"> a=i--;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>变量名++；    // 表示在本次使用变量后再自增；<br>++变量名;     // 表示在本次使用变量前自增；<br>变量名–；    // 表示在本次使用变量后再自增；<br>–变量名;     // 表示在本次使用变量前自减；</p></blockquote><ul><li><p>其实很简单，无论是i++还是++i，i这个变量一定会变，那么i++与++i有什么不同呢？</p></li><li><p>i++这个式子的值还是i，++i式子的值是i+1，不同的是式子的值</p></li></ul><h2 id="赋值运算符">赋值运算符</h2><p><strong>字符串（字符数组）不能使用赋值运算符。</strong></p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>=</td><td>A=B</td></tr><tr><td>+=</td><td>A+=B;A=A+B</td></tr><tr><td>-=</td><td>A-=B;A=A-B</td></tr><tr><td>*=</td><td>A*=B;A=A*B</td></tr><tr><td>/=</td><td>A/=B;A=A/B</td></tr><tr><td>%=</td><td>A%=B;A=A%B</td></tr></tbody></table><h2 id="sizeof运算符；">sizeof运算符；</h2><ul><li><p>sizeof是C语言的关键字，它用来计算变量（或数据类型）在当前系统中占用内存的字节数。</p></li><li><p>sizeof不是函数，产生这样的疑问是因为sizeof的书写确实有点像函数，sizeof有两种写法：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sizeof(数据类型);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>俩种写法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;%d&quot;,sizeof(a)); //输出a的占用字节数</span><br><span class="line">printf(&quot;%d&quot;,sizeof a ); //对于变量也可以不加括号</span><br><span class="line">printf(&quot;%d&quot;,sizeof(int)); //输出4，对于数据类型，必须加括号</span><br><span class="line"></span><br><span class="line">个人建议全部加括号</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="关系运算符；">关系运算符；</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">==  =</span><br><span class="line">&lt;=  ≤</span><br><span class="line">&gt;=  ≥</span><br><span class="line">&gt;   大于</span><br><span class="line">&lt;   小于</span><br><span class="line">这些不多说了</span><br></pre></td></tr></table></figure><ul><li>!= 表示不等于</li></ul><h2 id="逻辑运算符；">逻辑运算符；</h2><ul><li>在 c语言中，三个逻辑运算符，与vb，python稍微不同，意思一样，写法不同</li></ul><h3 id="与">&amp;&amp; (与)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">-1</span> &amp;&amp; a&lt;<span class="number">0</span>)  <span class="comment">//表示只有满足俩个条件时才继续运行</span></span><br></pre></td></tr></table></figure><h3 id="（或）">||（或）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">-1</span> || a&lt;<span class="number">0</span>)  <span class="comment">//表示满足其中一个条件时才继续运行</span></span><br></pre></td></tr></table></figure><h3 id="（非）">!（非）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(a&gt;<span class="number">-1</span>))  <span class="comment">//表示不满足此条件时运行</span></span><br></pre></td></tr></table></figure><h2 id="位运算符。">位运算符。</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;仅为个人笔记（随笔，后期可能会整理）&quot;&gt;仅为个人笔记（随笔，后期可能会整理）&lt;/h3&gt;
&lt;h2 id=&quot;算术运算符；&quot;&gt;算术运算符；&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;±/* 我就不介绍了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%余数运算符，整除后的余数&lt;br&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网站 更新日志</title>
    <link href="https://www.impdx.vip/posts/ee22/"/>
    <id>https://www.impdx.vip/posts/ee22/</id>
    <published>2020-07-22T13:10:44.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<hr><p>此文章仅作为网站更新日志</p><h1>列表</h1><ul><li><p>2021.7.22 22:33</p><ul><li>修改又拍云配置，禁用云储存，申请又拍云联盟代金卷</li><li>增加https://impdx.vercel.app/ 托管至vercel</li></ul></li><li><p>2021.7.22</p><ul><li>从hexo4.2切换到hexo5.4</li><li>从butterfly2.8更新至3.8.2</li><li>更新nodejs版本</li><li>去除coding的托</li><li>去除三家cdn混用，引入又拍云cdn并同步至又拍云储存</li><li>去除aplayer吸顶音乐</li><li>更新各种插件版本<ul><li>hexo-abbrlink</li><li>hexo-baidu-url-submit</li><li>hexo-filter-nofollow</li><li>hexo-generator-baidu-sitemap</li><li>hexo-generator-sitemap</li><li>hexo-renderer-markdown-it</li><li>hexo-offline</li><li>@neilsustc/markdown-it-katex</li><li>hexo-generator-feed</li></ul></li></ul></li><li><p>2020年 太久远了 没有记录哦^_^</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;此文章仅作为网站更新日志&lt;/p&gt;
&lt;h1&gt;列表&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2021.7.22 22:33&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改又拍云配置，禁用云储存，申请又拍云联盟代金卷&lt;/li&gt;
&lt;li&gt;增加https://impdx.vercel.app/</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="hexo" scheme="https://www.impdx.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何使用多家cdn优化博客(hexo 又拍云主线路)</title>
    <link href="https://www.impdx.vip/posts/e3c9/"/>
    <id>https://www.impdx.vip/posts/e3c9/</id>
    <published>2020-06-16T11:25:43.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.upyun.com/tech/article/551/%E6%9C%89%E5%A5%96%E5%BE%81%E6%96%87%EF%BD%9C%E5%8F%88%E6%8B%8D%E4%BA%91%E5%8E%9F%E5%88%9B%E6%8A%80%E6%9C%AF%E5%BE%81%E6%96%87%E5%A4%A7%E8%B5%9B%EF%BC%8CFILCO%E9%94%AE%E7%9B%98%E3%80%81%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E3%80%81%E4%BB%A3%E9%87%91%E5%88%B8%E7%AD%89%E4%BD%A0%E6%9D%A5%E6%8B%BF.html">本文参加又拍云原创技术征文活动</a></p><p><a href="https://www.upyun.com/tech/article/562/%E8%8E%B7%E5%A5%96%E5%90%8D%E5%8D%95%E5%85%AC%E5%B8%83%EF%BD%9C%E5%8F%88%E6%8B%8D%E4%BA%91%E5%8E%9F%E5%88%9B%E6%8A%80%E6%9C%AF%E5%BE%81%E6%96%87%E6%B4%BB%E5%8A%A8%E5%9C%86%E6%BB%A1%E8%90%BD%E5%B9%95.html">本文已获得又拍云征文三等奖</a></p><h1>起因</h1><ul><li>我的站点原本挂 coding和github的 peages 发现github访问速度不理想</li><li>coding又不稳，经常崩</li></ul><p>在了解了cdn后，6月份<strong>备案</strong>了。开始白嫖之路</p><h1>各大白嫖cdn的介绍</h1><h3 id="以下按个人使用感受排名">以下按个人使用感受排名</h3><ul><li>又拍云<ul><li>实测各方面均不错</li><li>缺点是流量少，但一般也用不完（加入又拍云联盟每个月流量+15g，很棒）</li></ul></li><li>百度云加速<ul><li>流量很多，每天10g</li><li>缺点是回源设置不如又拍云，而且经常报5xx错误</li><li>而且有概率反向加速</li></ul></li><li>奇安信加速<ul><li>奇安信流量一年1t，没错，按年来算。。</li><li>速度，只有一个节点，，一个人被打，全部受影响。日常不稳，经常404</li></ul></li></ul><h1>目前方案</h1><p>使用dnspod进行分线路解析</p><ul><li>默认线路：又拍云</li><li>联通线路：百度云加速</li><li>电信线路：奇安信</li><li>境外：github</li><li>小运营商：又拍云</li></ul><p>为何这样分配？看下问</p><h1>原理图</h1><p>第一次做流程图，如有可以改进的地方可以评论区留言<br><img src="https://pic2.latewind.cn/2020/06/17/4df2e8f9ea0bf.png" alt="dnspod分线路解析cdn.png"></p><h3 id="线路分配原因">线路分配原因</h3><ul><li>又拍云 国内节点最多，最稳。所以用来应对蛋疼的移动线路</li><li>百度云节点其次，用来应付联通</li><li>奇安信就一个节点，，，当然是电信大头</li><li>境外路线直接走的github没套cdn</li><li>小运营商其实不用管，默认线路是又拍云，除了以上线路其他全走又拍云。</li></ul><p>实测又拍云最稳，百度云经常报5xx错误，奇安信就算炸了也没多少人管。而且奇安信多访问几次直接算cc。</p><h1>相应操作</h1><h3 id="注意点">注意点</h3><ul><li><strong>建议加入又拍云联盟（免费每个月15g储存和10gcdn流量）</strong></li><li>只讲关键的操作步骤</li><li>域名需要备案。关于怎么备案hexo（coding&amp;github），后期高考完我会出教程</li><li>各大cdn都需要<strong>实名</strong>，其中需要手持，身份证各正反面。</li><li>奇安信的实名审核就可以使用，百度审核中不能使用，又拍云审核中可以使用</li><li>添加cname验证cdn的时候，注意线路一定要默认才可以验证。验证完可以改线路，不影响使用。</li></ul><h2 id="前置dnspod操作">前置dnspod操作</h2><h3 id="进入控制台">进入控制台</h3><p>设置两条子域名，分别指向github和coding的地址。<br><img src="https://pic2.latewind.cn/2020/06/17/7ab0bfd1b3f56.png" alt="N74PDPJA549A_7Y0X___CQX.png"></p><h2 id="又拍云操作">又拍云操作</h2><h3 id="1-进入又拍云控制台">1.进入又拍云控制台</h3><h3 id="2-选择cdn服务，点创建">2.选择cdn服务，点创建</h3><p><img src="https://pic2.latewind.cn/2020/06/17/d304dc3943d86.png" alt="O_4_7~4_Y88R_M@_`PV.png"></p><p><img src="https://pic2.latewind.cn/2020/06/17/c52bb366dd77f.png" alt="S2C3~W_D__GUEL1_T.png"></p><h3 id="3-进入配置，配置cname">3.进入配置，配置cname</h3><ul><li>注意线路一定要默认</li></ul><p><img src="https://pic2.latewind.cn/2020/06/17/06e72265a9cbb.png" alt="JTI6`ZO~NNDQ__QUE~RL6A0.png"><br>至此简单的配置已经完成了</p><h2 id="又拍云优化系列">又拍云优化系列</h2><h3 id="缓存控制">缓存控制</h3><ul><li>开启分段缓存</li><li>缓存配置，我配置了缓存全站1小时。（因博客需要经常更新文章）</li></ul><h3 id="性能优化">性能优化</h3><ul><li>开启页面压缩</li><li>开启重定向跟随</li></ul><h3 id="https">https</h3><ul><li>开启TLS 1.3</li><li>最低 TLS 版本 选择1.0，因为兼容所以选择</li><li>HTTP/2 开启</li></ul><h3 id="访问控制（重要）">访问控制（重要）</h3><ul><li><p>ip访问限制</p><ul><li>一分钟超过300次直接禁止24小时ip访问（由于全是静态，有更合理的设置可以评论改进）</li></ul></li><li><p>cc防护 开启</p><ul><li>url匹配规则 /*</li><li>访问频率300 次/分</li><li>智能防护 无白名单</li></ul></li><li><p>waf防护 开启</p></li></ul><p>图片处理和成本控制以及边缘规则我并没有开，因为是静态站，也不会放啥mp4.</p><h2 id="百度云操作">百度云操作</h2><ul><li>1.添加网站（选择cname）</li><li>2.验证dns，cname记录等。<strong>注意：线路要为默认</strong></li><li>3.在子域名解析加入 例子：<br><img src="https://pic2.latewind.cn/2020/06/17/20ea03e5eb8e3.png" alt="_OR_86__H3D0~MBP5RWV0MA.png"><br>至此简单配置教程结束</li></ul><h2 id="奇安信操作">奇安信操作</h2><h3 id="注意点-2">注意点</h3><ul><li>奇安信验证时间特别特别长，接入网站时，有时候会白。据工作人员了解每新增一个域名需要手动去添加，因而只有工作日才可以添加。</li><li>奇安信网站卫士的js/css/html缓存，千万别开。不然慢死你。</li></ul><p><img src="https://pic2.latewind.cn/2020/06/17/9f0364a37cf3f.png" alt="_FA9H9A80H_TOQI63@N_8RX.png"></p><h3 id="进入控制台-2">进入控制台</h3><ul><li>就这样嗯嗯嗯，那样嗯嗯嗯，就好了</li><li>绑定域名还是cname接入，上dnspod默认线路，等10分钟左右生效（ttl：600）。然后点小刷新图标刷新。</li><li>接入还是老样子，域名解析www，cname解析到如：github.impdx.vip（第一步设置的github地址）。</li><li>开启云防护。</li><li>结束</li></ul><h2 id="dnspod设置各线路解析cname">dnspod设置各线路解析cname</h2><p><img src="https://pic2.latewind.cn/2020/06/17/35404a185fa8c.png" alt="D@_YMR2__6AGZ5H_A2__U6H.png"></p><h3 id="设置d监控">设置d监控</h3><p><img src="https://pic2.latewind.cn/2020/06/17/dc49e1b5cb4bf.png" alt="_R_G6IQSJ_WSB3_HW3_9VBE.png"></p><h1>至此</h1><p>关键步骤均已完成</p><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=3ltx2dbwpkcgc">https://cloud.tencent.com/developer/support-plan?invite_code=3ltx2dbwpkcgc</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.upyun.com/tech/article/551/%E6%9C%89%E5%A5%96%E5%BE%81%E6%96%87%EF%BD%9C%E5%8F%88%E6%8B%8D%E4%BA%91%E5%8E%9F%E5%88%9</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="cdn" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/cdn/"/>
    
    
    <category term="hexo" scheme="https://www.impdx.vip/tags/hexo/"/>
    
    <category term="cdn" scheme="https://www.impdx.vip/tags/cdn/"/>
    
  </entry>
  
  <entry>
    <title>2020高职提前招生分析（计算机类）</title>
    <link href="https://www.impdx.vip/posts/354b/"/>
    <id>https://www.impdx.vip/posts/354b/</id>
    <published>2020-05-13T14:27:10.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>声明</h1><ul><li>数据来自浙江省考试院官网 <a href="https://www.zjzs.net/moban/index/000000007080bb400171f75f902d08b0.html">点击此处进入</a></li><li>以下学校不分排名，只作参考</li><li>数据有误可在评论区留言</li><li>没写学费是因为我没有在相关网页中找到</li></ul><h1>注意</h1><ul><li>一旦报名 被录取  不可参加高考</li><li>报名 未录取，可参加高考</li><li>报名，多校录取，选择学校，不可高考</li></ul><h2 id="仅作参考">仅作参考</h2><table width="975" border="1" cellspacing="1" cellpadding="1">  <tr>    <th width="215">学校</th>    <th width="206">专业</th>    <th width="76" align="center">人数</th>    <th width="76" align="center">学费</th>    <th width="197">地点</th>    <th width="172">是否民办</th>  </tr>  <tr>    <td><a href="https://zhaosheng.nbpt.edu.cn/a/202059/847.shtml">宁波职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/数字媒体应用技术/22245510?fr=aladdin">数字媒体应用技术</a></td>    <td align="center">10</td>    <td align="center">6600/年</td>    <td>宁波经济技术开发区</td>    <td>否</td>  </tr>  <tr>    <td><a href="http://zsw.zjjy.net/a/2020511/648.shtml">浙江建设职业技术学院</a></td>    <td><a href="http://zsw.zjjy.net/danye/72.shtml">城市信息化管理（智慧城管）</a></td>    <td align="center">20</td>    <td align="center">6600/年</td>    <td>杭州校区地址为杭州市萧山高教园区、上虞校区地址为绍兴市上虞区。</td>    <td>否</td>  </tr>  <tr>    <td><a href="http://zs.zjdfc.com/Art/Art_11/Art_11_10249.aspx">浙江东方职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E4%B8%93%E4%B8%9A/11043689?fr=aladdin">计算机信息管理 </a></td>    <td align="center">25</td>    <td align="center">/年</td>    <td>金海校区（温州市经济技术开发区金海三道433号）</td>    <td bgcolor="#999999">是</td>  </tr>  <tr>    <td rowspan="2"><a href="http://tqzs.zjff.edu.cn/Pc/Public/Notice/view.html?id=90b3a1a1-962c-442d-969c-1ef42697e0a7&amp;type=notice&amp;_vid=zl0101">浙江纺织服装职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%97%E5%AA%92%E4%BD%93%E8%89%BA%E6%9C%AF/4567991?fr=aladdin">数字媒体艺术设计</a></td>    <td align="center">10</td>    <td align="center">9000/年</td>    <td rowspan="2">浙江省宁波市江北区风华路495号</td>    <td rowspan="2">否</td>  </tr>  <tr>    <td height="39"><a href="https://baike.baidu.com/item/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/11030579?fr=aladdin">移动应用开发 </a></td>    <td align="center">10</td>    <td align="center">6600/年</td>  </tr>  <tr>    <td rowspan="6"><a href="http://zs.zjczxy.cn/ggl/2271">浙江长征职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A%E8%BF%90%E8%90%A5%E7%AE%A1%E7%90%86/10914235?fr=aladdin">城市轨道交通运营管理</a></td>    <td align="center">10</td>    <td rowspan="6" align="center">/年</td>    <td rowspan="6">浙江省杭州市西湖区小和山高教园区留和路525号</td>    <td rowspan="6" bgcolor="#999999">是</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/15968?fr=aladdin">计算机应用技术</a></td>    <td align="center">40</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/数字媒体应用技术/22245510?fr=aladdin">数字媒体应用技术</a></td>    <td align="center">10</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/电子商务/98106?fr=aladdin">电子商务</a></td>    <td align="center">10</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%96%B0%E9%97%BB%E4%B8%8E%E4%BC%A0%E6%92%AD%E4%B8%93%E4%B8%9A/24455345?fr=aladdin">网络新闻与传播 </a></td>    <td align="center">10</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E7%AB%9E%E6%8A%80%E8%BF%90%E5%8A%A8%E4%B8%8E%E7%AE%A1%E7%90%86/24496452?fr=aladdin">电子竞技运动与管理</a></td>    <td align="center">20</td>  </tr>  <tr>    <td><a href="http://www.zjbc.edu.cn/zs/content/1055.html">浙江商业职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/电子商务/98106?fr=aladdin">电子商务</a></td>    <td align="center">20</td>    <td align="center">6900/年</td>    <td>杭州市滨江区滨文路470号</td>    <td>否</td>  </tr>  <tr>    <td><a href="https://zsw.sxvtc.com/a/202059/348.shtml">绍兴职业技术学院 </a></td>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/15968?fr=aladdin">计算机应用技术</a></td>    <td align="center">45</td>    <td align="center">12000/年</td>    <td>绍兴市越城区山阴路526号</td>    <td bgcolor="#999999">是</td>  </tr>  <tr>    <td rowspan="4"><a href="http://tqzs.guangshaxy.com/danye/4.shtml">浙江广厦建设职业技术学院 （本科院校 但计算机招生是专科）</a></td>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/15968?fr=aladdin">计算机应用技术</a></td>    <td align="center">15</td>    <td rowspan="4" align="center">13000/年</td>    <td rowspan="4">浙江省东阳市广福东街1号</td>    <td rowspan="4" bgcolor="#999999">是</td>  </tr>  <tr>    <td> <a href="https://baike.baidu.com/item/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/23453226?fr=aladdin">大数据技术与应用</a></td>    <td align="center">5</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9E%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF%E4%B8%93%E4%B8%9A/24458872?fr=aladdin">虚拟现实应用技术</a></td>    <td align="center">15</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E5%8A%A8%E6%BC%AB%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%B6%E4%BD%9C/10964133?fr=aladdin">动漫制作技术 </a></td>    <td align="center">10</td>  </tr>  <tr>    <td><a href="https://www.tzvcst.edu.cn/zs/detail/126058">台州科技职业学院 </a></td>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/15968?fr=aladdin">计算机应用技术</a></td>    <td align="center">15</td>    <td align="center">6600/年</td>    <td>台州市黄岩区嘉木路288号</td>    <td>否</td>  </tr>  <tr>    <td><a href="http://zs.wzvcst.cn/a/202059/355.shtml">温州科技职业学院 </a></td>    <td><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/1194?fr=aladdin">计算机网络技术</a></td>    <td align="center">20</td>    <td align="center">6600/年</td>    <td>温州市六虹桥路1000号</td>    <td>否</td>  </tr>  <tr>    <td><a href="https://tqzshd.eduw.cn/a/2020510/56.shtml">浙江横店影视职业学院</a></td>    <td><a href="https://baike.baidu.com/item/%E5%BD%B1%E8%A7%86%E5%90%8E%E6%9C%9F%E5%88%B6%E4%BD%9C/10370688?fr=aladdin">广播影视节目制作（影视后期制作）</a></td>    <td align="center">21</td>    <td align="center">/年</td>    <td>浙江省东阳市</td>    <td bgcolor="#999999">是</td>  </tr>  <tr>    <td rowspan="2"><a href="http://zs.zjist.cn/Art/Art_2/Art_2_312.aspx">浙江安防职业技术学院</a></td>    <td><a href="https://baike.baidu.com/item/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/23453226?fr=aladdin">大数据技术与应用</a></td>    <td align="center">10</td>    <td rowspan="2" align="center">6600/年</td>    <td rowspan="2"><p>本部校区位于温州市瓯海区郭溪街道</p>    <p>滨海校区</p></td>    <td rowspan="2" bgcolor="#FFFFFF">否</td>  </tr>  <tr>    <td><a href="https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E7%AE%A1%E7%90%86/8962028?fr=aladdin">安全技术与管理 </a></td>    <td align="center">5</td>  </tr></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;声明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;数据来自浙江省考试院官网 &lt;a href=&quot;https://www.zjzs.net/moban/index/000000007080bb400171f75f902d08b0.html&quot;&gt;点击此处进入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;以下学校不</summary>
      
    
    
    
    <category term="学习" scheme="https://www.impdx.vip/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="高职考" scheme="https://www.impdx.vip/categories/%E5%AD%A6%E4%B9%A0/%E9%AB%98%E8%81%8C%E8%80%83/"/>
    
    
    <category term="高职考" scheme="https://www.impdx.vip/tags/%E9%AB%98%E8%81%8C%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>windows server 2019 断电无法启动修复</title>
    <link href="https://www.impdx.vip/posts/b5d/"/>
    <id>https://www.impdx.vip/posts/b5d/</id>
    <published>2020-03-27T13:37:35.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>环境，问题发生</h1><ul><li>本地有台win server 2019</li><li>突然停电，没有ups，停电后又来电5s又断电</li><li>造成winserver启动转圈圈卡住重新启动</li></ul><h1>解决方法</h1><ul><li>尝试使用微pe中的dism++镜像修复，引导修复。显示镜像无问题</li><li>制作可引导镜像刻录在u盘中进行修复</li></ul><p>检查磁盘并修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkdsk C: /R /f</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修复引导</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Bootrec.exe /fixmbr</span><br><span class="line">Bootrec /fixboot</span><br><span class="line">bootrec /RebuildBcd</span><br><span class="line">bcdboot c:\windows /s c:</span><br></pre></td></tr></table></figure><p>检查系统文件受损</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sfc /SCANNOW</span><br></pre></td></tr></table></figure><h1>执行以上步骤，完美开机</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;环境，问题发生&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;本地有台win server 2019&lt;/li&gt;
&lt;li&gt;突然停电，没有ups，停电后又来电5s又断电&lt;/li&gt;
&lt;li&gt;造成winserver启动转圈圈卡住重新启动&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;解决方法&lt;/h1&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="笔记" scheme="https://www.impdx.vip/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="winserver" scheme="https://www.impdx.vip/tags/winserver/"/>
    
    <category term="运维" scheme="https://www.impdx.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>高职考计算题笔记汇总</title>
    <link href="https://www.impdx.vip/posts/4cf3/"/>
    <id>https://www.impdx.vip/posts/4cf3/</id>
    <published>2020-03-20T01:54:00.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>存储单元计算</h1><ul><li><p>公式：储存容量=末地址 — 首地址 + 1</p><p>​末地址=首地址+储存容量 — 1</p><p>​首地址=末地址—储存容量 +1</p></li></ul><p>例子：</p><p><img src="https://pic2.latewind.cn/2020/03/20/c01c6fab1f7e6.png" alt="_4_6003~_N_EI_5~ILK_Q2H.png"></p><h1>数值大小比较和ASCII码</h1><h2 id="进制相关">进制相关</h2><ul><li>考纲 （二进制，十进制，八进制，十六进制）仅限整数</li><li>概念<ul><li>数制：也称计数制，是指计数的方法，采用一组计数符号的组合来表示任何一个方法。（比如10进制，十六进制）<ul><li>数码：每种数制中都有固定的基本符号。（下图的基本符号）</li><li>基数：数码的个数称为基数，比如10进制有10个数码，基数为10。二进制有2个数码，基数为2。</li><li>位权：每一个数位上的数码所表示的数值大小，等于该数码自身的值乘以该数位所代表的位权。 就是下图中的i。</li></ul></li></ul></li></ul><p><img src="https://pic2.latewind.cn/2020/03/25/c84916899286a.png" alt="中职1-1.png"></p><h2 id="ASCII码">ASCII码</h2><ul><li><p>概念</p><ul><li><p>美国信息标准交换代码，128种符号，用7位二进制数来编码表示。（ISO-646）包含10个数字、52个英文大小写字幕、33个标点符号及运算符、33个控制码。</p></li><li><p>ascii码英文大小写相差32</p></li></ul></li></ul><div class="note info flat"><ul><li>牢记<br>0 – 48<br>A – 65<br>a – 97</li></ul></div><p><img src="https://pic2.latewind.cn/2020/03/25/c5c7e8156f9f7.png" alt="ascii.png"></p><h1>原码反码补码换算</h1><h2 id="概念">概念</h2><ul><li>为什么产生：原码反码补码的产生过程就是为了解决计算机做减法和引入符号位的问题</li><li>概念<ul><li>真值数：带符号的数字</li><li>机器数：把正负符号转换成数字的数，为二进制</li><li>原码：记作[X]原</li></ul></li></ul><h2 id="算法">算法</h2><ul><li>正数<ul><li>原码=反码=补码</li></ul></li><li>负数<ul><li>反码=原码取反</li><li>补码=反码+1</li></ul></li><li>特殊值<ul><li>0,1,127 直接套公式算。就行了</li></ul></li></ul><h2 id="特殊">特殊</h2><ul><li><p>当机器数为8位时，真值的取值范围 -127 ~ +127</p></li><li><p>注意有个奇葩的玩意-128。只有<strong>补码</strong>，没有原码补码。</p></li></ul><h1>奇偶检验码</h1><p>核心：看1的个数，奇检验1的个数为奇数，偶检验，1的个数为偶数，在最高位加1或者0</p><ul><li>总共8位，7位数据，1位检验。位数不够时在最高位+0变成7位。（重点）</li><li>只具有检验能力，发现了也不能纠错。无纠错功能。（判断题经常出现）</li><li>一个字节一个检验位，一个汉字2字节，所以一个汉字2个检验位 （高考题）</li><li>多位数据错误检测不出，检测不到错误发生在哪一位 （了解一下）</li><li>应用于低速数据通信系统中。（了解一下）</li><li>异步偶检验，同步奇检验 （了解一下）</li></ul><h1>汉字编码（区位码/国标码/机内码等）</h1><h2 id="概念-2">概念</h2><h3 id="1-汉字输入码">1.汉字输入码</h3><ul><li>外部码 外码 （详见书本P25）</li></ul><h3 id="2-汉字内码">2.汉字内码</h3><ul><li><p>汉字信息交换码</p><ul><li>GB2312-80国标将汉字编码分为94区与94位。</li><li>共收集了7445个图形字符，其中一班服好、数字拉丁字母、希腊字母、、汉字拼音等682个</li><li>一级汉字3755个，二级汉字3008个</li></ul></li><li><p>区位码，即国标码演化而来。</p><ul><li><blockquote><p>16-55 　(常用字) 　　　　一级字符 　　　按汉语拼音顺序，同音字按笔画排列<br>56-87 （非常用字） 　　　二级字符  　　 按部首笔画顺序排列</p></blockquote></li><li><strong>区位码为10进制</strong></li></ul></li><li><p>机内码 指汉字信息处理系统内部标识汉字的编码。由国标码演化而来，把国标码俩个字节最高位都置1.</p></li></ul><h3 id="3-汉字字形码">3.汉字字形码</h3><ul><li>在点阵字模中 黑为1，白为0，一共8位</li><li>16x16/8</li></ul><h3 id="4-汉字地址码-：">4.汉字地址码 ：</h3><ul><li>概念：存放汉字字模信息在汉字库中存放逻辑地址的编码</li><li>硬字库<ul><li>不占用内存，安装在卡上，插在微机的扩充槽里。</li><li>EPROM</li><li>MAKSROM</li></ul></li><li>软字库<ul><li>存放在磁盘上，使用时将汉字调入内存，故占用相当部分的内存。</li></ul></li></ul><h2 id="字符集">字符集</h2><ul><li>UCS 通用编码字符集 规定了全世界代书面语言文字使用的标准编码。USC中表意文字中日韩统一汉字编码（CJK）。台湾香港使用BIG5.windows下一般为GBK</li></ul><ol><li>GB2312-80称为国标码</li><li>Big5又称大五码，香港台湾使用，即繁体字编码</li><li>GBK是GB2312的拓展，向上兼容，包含GB2312及GBK中繁体字编码</li></ol><h2 id="计算公式">计算公式</h2><p>汉字机内码=汉字国标码+8080H<br>汉字国标码=汉字区位码（十六进制）+2020H<br>汉字机内码=汉字区位码（十六进制）+A0A0H</p><ul><li><p>注意： 区位码默认十进制，需转换十六进制进行运算</p></li><li><p>16*16的点阵显示需要的容量 16*16/8</p></li><li><p>32X32点阵存放 二级汉字库，占用空间 3008 X32X32/8 /1024。在上面的基础上乘以3755（一级汉字）或者3008（二级汉字）再除以1024就是kb。</p></li></ul><h1>图像音频文件大小</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;存储单元计算&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;公式：储存容量=末地址 — 首地址 + 1&lt;/p&gt;
&lt;p&gt;​			末地址=首地址+储存容量 — 1&lt;/p&gt;
&lt;p&gt;​			首地址=末地址—储存容量 +1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
      
    
    
    
    <category term="学习" scheme="https://www.impdx.vip/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="高考" scheme="https://www.impdx.vip/categories/%E5%AD%A6%E4%B9%A0/%E9%AB%98%E8%80%83/"/>
    
    
    <category term="高职考" scheme="https://www.impdx.vip/tags/%E9%AB%98%E8%81%8C%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>asrd 16人补丁</title>
    <link href="https://www.impdx.vip/posts/c6ac/"/>
    <id>https://www.impdx.vip/posts/c6ac/</id>
    <published>2020-03-08T23:05:25.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<h1>运行测试图</h1><p><img src="https://r.photo.store.qq.com/psb?/V13iVwZo2obvUj/*7P*Ubd2.8OqGze07k80S51H0TLtyl6Tg27l817xzJg!/r/dFQBAAAAAAAAnull/_yake_qzoneimgout.png" alt="asrdtest.png"></p><h1>补丁使用方法</h1><p>下载解压到游戏目录，注意对应文件和目录位置（不会覆盖任何游戏文件）<br><img src="https://r.photo.store.qq.com/psb?/V13iVwZo2obvUj/Rq.G4NVZN.UlFSzjvVNMFFEaVUmcdbkyPGbCre9j5Uw!/r/dLYAAAAAAAAAnull/_yake_qzoneimgout.png" alt="asrdtest.png"></p><p>运行 【asrd_yake_16.exe】 就是 运行16人客户端，可以将这个程序发送桌面快捷方式。</p><p>如果通过steam启动as：rd 那么运行是原版客户端。</p><h1>文件说明</h1><p>asrd_yake_16.exe 为16人客户端</p><p>srcds_16.exe  为16人专用服务端 （开服务器玩家才需要）</p><h1>特别说明</h1><div class="note warning flat"><h4 id="特别说明">特别说明</h4><p>1， 16人客户端只能进16人服务器/主机 。 原版客户端只能进原版客户端/主机。 不会自动识别。</p><p>2， 本版本为先行测试版，bug慢慢修复。</p></div><h1>已知bug</h1><div class="note danger flat"><h4 id="BUG">BUG</h4><p>1，只有前8个角色的装备会保留,后8个角色每次回到大厅会恢复默认装备(调试4天,暂时没找到哪里问题)</p><p>2， 如果选了超过8个角色的情况，按F9投票有一定概率会客户端奔溃。(谁按谁奔溃,不影响其他人)</p></div><p>建议换地图 使用控制台命令 换地图.</p><p>asw_vote_chooser map<br>可以将这个命令绑定快捷键,比如F10</p><p>bind F10 “asw_vote_chooser map;”</p><p>这些bug可能都是数组越界引起的，源代码太复杂,而且我又太懂擅长vc++。。作者还在慢慢修复</p><h1>开服务器说明</h1><div class="note info no-icon flat"><h4 id="No-icon-note">No icon note</h4><p>只需要将原来bat文件里面内容 srcds.exe 替换 --&gt; srcds_16.exe 即可。</p><p>服务器带的动的话， 你可以一个bat运行原版/一个bat运行16人版。</p></div><h1>下载</h1><div class="note success flat"><h4 id="下载">下载</h4><p>更新时间_2019/10/02</p><p>链接: <a href="https://pan.baidu.com/s/1bhtGMCC2Km_9602KKfFuuA">https://pan.baidu.com/s/1bhtGMCC2Km_9602KKfFuuA</a></p><p>提取码: wujd</p></div><div class="note info no-icon flat"><h4 id="原作者">原作者</h4><p>原文作者: Y.A.K.E</p><p>原文链接: <a href="https://www.yge.me/detail/show/id/45.html">https://www.yge.me/detail/show/id/45.html</a></p><p>许可协议: 知识共享署名-非商业性使用 4.0 国际许可协议</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;运行测试图&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://r.photo.store.qq.com/psb?/V13iVwZo2obvUj/*7P*Ubd2.8OqGze07k80S51H0TLtyl6Tg27l817xzJg!/r/dFQBAAAAAAAAnull</summary>
      
    
    
    
    <category term="教程" scheme="https://www.impdx.vip/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ASRD" scheme="https://www.impdx.vip/tags/ASRD/"/>
    
  </entry>
  
  <entry>
    <title>asrd服务器配置（进阶）</title>
    <link href="https://www.impdx.vip/posts/fd31/"/>
    <id>https://www.impdx.vip/posts/fd31/</id>
    <published>2020-02-28T16:00:00.000Z</published>
    <updated>2021-12-06T04:10:49.111Z</updated>
    
    <content type="html"><![CDATA[<p>linux 请看 <a href="https://github.com/mithrand0/reactive-drop-docker">https://github.com/mithrand0/reactive-drop-docker</a></p><h1>修改配置文件</h1><p>前言：asrd服务器配置文件可以大概分为AutoGavy的配置，自爆砖家的配置，南方的配置。国外的配置文件这里不涉及。</p><div class="note default flat"><h4 id="配置文件一键安装">配置文件一键安装</h4><p>我把所有的配置文件都整理好了，可以下载直接覆盖。</p><ul><li>链接：<a href="https://pan.baidu.com/s/1S9VPn3cRqjmcw-BPIIUgKw">https://pan.baidu.com/s/1S9VPn3cRqjmcw-BPIIUgKw</a><br>提取码：7ce9</li></ul><p><strong>如果使用上述配置文件，直接覆盖就行不用修改</strong></p><p>建议根据服务器调整。</p><ul><li>1M学生机选自爆砖家的配置：5M可选AutoGavy的配置：更高配置可选南方配置/或者自己改。</li></ul></div><h2 id="AutoGavy的配置">AutoGavy的配置</h2><p>原帖 <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1927158239">https://steamcommunity.com/sharedfiles/filedetails/?id=1927158239</a><br>原HZ服务配置</p><ul><li>服务器配置要求</li></ul><p>至少拥有5m宽带，1核2G。宽带越高越好，但大陆宽带普遍贵.</p><ul><li>cfg文件配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hostname &quot;[xigua] HZ-1&quot;// 服务器名称</span><br><span class="line">asw_marine_death_cam_slowdown 0// 关闭死亡慢镜头</span><br><span class="line">rd_override_allow_rotate_camera 1// 允许旋转镜头</span><br><span class="line">rd_ready_mark_override 1// 为加入的玩家设置准备</span><br></pre></td></tr></table></figure><ul><li>autoexec.cfg</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sv_alternateticks 0</span><br><span class="line">sv_minrate 30000// 标记 如只开一个服务器 100000 带宽较少默认</span><br><span class="line">sv_maxrate 400000// 标记 如只开一个服务器 600000带宽较少默认</span><br><span class="line">sv_minupdaterate 0</span><br><span class="line">sv_maxupdaterate 60</span><br><span class="line">sv_mincmdrate 0</span><br><span class="line">sv_maxcmdrate 60</span><br><span class="line">net_maxfilesize 1</span><br><span class="line">net_splitrate 2</span><br><span class="line">net_splitpacket_maxrate 40000// 标记 如只开一个服务器60000</span><br><span class="line">rd_adjust_sv_maxrate 0</span><br><span class="line">sv_client_cmdrate_difference 20</span><br><span class="line">sv_client_max_interp_ratio 8</span><br><span class="line">sv_client_min_interp_ratio 0</span><br><span class="line">sv_client_predict 1</span><br><span class="line">asw_max_saves 600</span><br><span class="line">sv_autosave 0</span><br><span class="line">snd_updateaudiocache</span><br></pre></td></tr></table></figure><ul><li>newmapsettings.cfg</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fps_max 30// 30 tickrate 配置高可选60fps</span><br></pre></td></tr></table></figure><h2 id="自爆砖家配置">自爆砖家配置</h2><p>适合1M小水管机器</p><p>原帖 <a href="https://tieba.baidu.com/p/6493224666">https://tieba.baidu.com/p/6493224666</a></p><ul><li>autoexec.cfg</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">fps_max 500        //建议修改为60或者30</span><br><span class="line">rd_adjust_sv_maxrate 0</span><br><span class="line">sv_maxrate 13000</span><br><span class="line">sv_minrate 0</span><br><span class="line">sv_maxupdaterate 8</span><br><span class="line">sv_minupdaterate 5</span><br><span class="line">sv_maxcmdrate 60</span><br><span class="line">sv_mincmdrate 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">net_splitrate 20</span><br><span class="line">net_splitpacket_maxrate 14200</span><br><span class="line">net_maxcleartime 0.001</span><br><span class="line">sv_client_cmdrate_difference 0</span><br><span class="line">sv_client_max_interp_ratio 1</span><br><span class="line">sv_client_min_interp_ratio 1</span><br><span class="line">sv_client_predict 1</span><br><span class="line">sv_parallel_packentities 1</span><br></pre></td></tr></table></figure><h2 id="南方配置。无需修改">南方配置。无需修改</h2><p>适合测试及高配置服务器</p><h1>使用RDA - 异形丛生RD高级插件(一般用于服务器)</h1><ul><li>插件安装 官网https://sites.google.com/view/rdadv</li></ul><p>将下载好的server.dll放置于游戏目录 Alien Swarm Reactive Drop\reactivedrop\bin 中。</p><ul><li>如果为服务端，只需要安装server.dll</li></ul><div class="note warning flat"><h4 id="rda作用">rda作用</h4><p>server.dll功能简介<br>使用 server.dll 后的服务器\房间  主要针对rda客户端。无论是否装了rda都可进入服务器。具体看官网</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">大堆性能优化（减少服务器崩溃几率）</span><br><span class="line">电梯不再被炮虫炮弹卡住</span><br><span class="line">火焰地雷不再被特殊地形挡住而失效（如darkpath玻璃地板）</span><br><span class="line">寄生虫不再卡出蛋外（原版会闪退）</span><br><span class="line">不同角度的蛋刷的寄生虫有正确角度</span><br><span class="line">虫子在一些地方爬出来时不再被卡住（如 adanaxis 战役第一关，area9800第三关）</span><br><span class="line">高速虫子不再有穿过玩家的bug，如ASBI Classic \ PRO, ASB2 等挑战，意味着可以制作更高速的虫子。</span><br><span class="line">吐绿球的怪不再因为被特殊物品\地形卡住而吐不出来</span><br><span class="line">修复虫子在一些地底能一边刷一边砍你的bug</span><br><span class="line">修复空武器bug</span><br><span class="line">创意工房的足球地图性能更好了。</span><br></pre></td></tr></table></figure><h1>使用 HLSM 工具管理服务器</h1><div class="note info flat"><h3 id="简介">简介</h3><p>HL Server Monitor”是由Rulzy工作室推出的一款免费软件。使用此软件，可以在HL服务器出现严重错误、进程丢失、网络无响应的时候，能自动重启HL服务器，以保证你的HL服务器能持续工作。本软件为免费软件，不提供任何使用保证。</p></div><p><img src="https://pic2.latewind.cn/2020/02/29/b600b845a4d6b.png" alt="hlsm.png"><br><img src="https://pic2.latewind.cn/2020/02/29/60c348af2232c.png" alt="hlsmtj.png"></p><ul><li>实现自动重启等功能。比bat完善。</li><li>比较老的工具了。也可以不使用HLSM，使用rcon功能。</li></ul><p>安装打开后右键增加服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-console -autoupdate -game reactivedrop -port 27016 +map lobby +con_logfile &quot;console.log&quot; -maxplayers 18 +exec server.cfg +hostname &quot;[CN]T3_瀹樺浘_鏇村鍦板浘www.impdx.vip鎼渁srd_&quot;</span><br></pre></td></tr></table></figure><p>参考参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">下面为可用启动参数：</span><br><span class="line"></span><br><span class="line">-console //以控制台模式启动服务器。</span><br><span class="line">-autoupdate //开启自动升级</span><br><span class="line">-condebug //在cspromod目录下生成记载有开发模式的控制台日志文件console.log。</span><br><span class="line">-game &quot;left4dead2&quot; //指定服务器内容为求生之路2，即指定服务器运行的游戏，在控制台模式下此为必须的参数。</span><br><span class="line">-insecure //取消Valve的反作弊模块VAC2(Valve Anti-Cheat 2)，欲加载VAC2则取消此参数，让服务器不检测 SteamID。</span><br><span class="line">-ip 192.168.1.2 //指定服务器IP地址为192.168.1.2，此IP地址必须是服务器本机有效的内网或外网IP。（提示：假如要用HLSW软件远程管理，必须使用此参数）</span><br><span class="line">-noipx //关闭对NetWare IPX的支持，稍微减轻CPU压力，除非是在NetWare LAN上玩。</span><br><span class="line">-port 27026 //指定服务器端口为27026，空缺此参数时，则默认27015为服务器端口。（提示：假如要用HLSW软件远程管理，必须使用此参数）</span><br><span class="line">-secure //启用Valve的反作弊模块</span><br><span class="line">+exec server.cfg //执行指定配置文件</span><br><span class="line">+log on //记录日志？</span><br><span class="line">+map c1m1_hotel //指定服务器地图为de_dust2，备选地图参照你所使用的游戏的地图。</span><br><span class="line">+maxplayers 14 //指定服务器最大人数为14人，范围1~64(根据地图、服务器性能来定)。</span><br><span class="line">+sv_gametypes coop //游戏模式，例如求生之路：coop = 战役、合作，versus = 对抗。</span><br><span class="line">+sv_lan 0 //指定服务器为Internet(互联网)服务器。</span><br><span class="line">+sv_lan 1 //指定服务器为Lan(局域网)服务器。</span><br><span class="line"></span><br><span class="line">其他参数：</span><br><span class="line"></span><br><span class="line">-defaultgamedir</span><br><span class="line">-buildcubemaps</span><br><span class="line">-nocdaudio</span><br><span class="line">-nosound</span><br><span class="line">-rebuildaudio</span><br><span class="line">-demo</span><br><span class="line">-bi</span><br><span class="line">-ref</span><br><span class="line">-adapter</span><br><span class="line">-freq</span><br><span class="line">-refresh</span><br><span class="line">-refreshrate</span><br><span class="line">-autoconfig</span><br><span class="line">-pme</span><br><span class="line">-allowstalezip</span><br><span class="line">-nomaster</span><br><span class="line">-nopreload</span><br><span class="line">-nopreloadmodels</span><br><span class="line">-nopreloadsounds</span><br><span class="line">-preload</span><br><span class="line">-dxlevel</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note warning flat"><h4 id="乱码问题">乱码问题</h4><ul><li>关于乱码问题，因为HLSM只支持ansi，但是游戏是支持UTF-8的。</li><li>新建一个文本用atom/notepad++等打开，uft8输入你服务器的名字，接着转换成ANSI，复制这串乱码就可以了。</li><li>已知bug：使用-ip参数时，本机游戏不能进入本机服务器。</li></ul></div><div class="note success flat"><h4 id="欢迎大佬-小白来提问，修正文章中有错误或者不正常的部分。请在评论区留言">欢迎大佬/小白来提问，修正文章中有错误或者不正常的部分。请在评论区留言</h4><ul><li>2020-3-13 去除 sv_forcepreload 1 负优化选项，增加T3workshop.cfg文件。</li></ul></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;linux 请看 &lt;a href=&quot;https://github.com/mithrand0/reactive-drop-docker&quot;&gt;https://github.com/mithrand0/reactive-drop-docker&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;修改配置文件</summary>
      
    
    
    
    <category term="教程" scheme="https://www.impdx.vip/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="ASRD" scheme="https://www.impdx.vip/tags/ASRD/"/>
    
    <category term="游戏服务器" scheme="https://www.impdx.vip/tags/%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
